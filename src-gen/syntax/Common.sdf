module Common
exports
  lexical syntax
    [a-zA-Z] [a-zA-Z0-9]*                   -> ID            
    "m" [A-Z] [a-zA-Z0-9]*                  -> MVAR          
    "time"                                  -> Time          
    "dur_tDesiredSpeed_true_time_1"         -> DUR           
    "c" [A-Z\_] [a-zA-Z0-9\_]*              -> CVAR          
    "mc" [A-Z\_] [a-zA-Z0-9]*               -> MCVAR         
    "t" [A-Z\_] [a-zA-Z0-9]*                -> TVAR          
    MVAR | CVAR | MCVAR | TVAR | Time | DUR -> OPNAME        
    "node" | "function" | "assume"          -> OPKIND        
    "-"? [0-9]+                             -> INT           
    [0-9]*                                  -> Number        
    [a-zA-Z\']*                             -> STRING        
    "true" | "false"                        -> Booleano      
    [0-9\.\-]*                              -> Float         
    INT | Booleano                          -> TYPE          
    ~[\"\n]                                 -> StringChar    
    "\\\""                                  -> StringChar    
    BackSlashChar                           -> StringChar    
    "\\"                                    -> BackSlashChar 
    [\ \t\n\r]                              -> LAYOUT        
    [\*]                                    -> CommentChar   
    "/*" InsideComment* "*/"                -> LAYOUT        
    ~[\*]                                   -> InsideComment 
    CommentChar                             -> InsideComment 
    "//" ~[\n\r]* NewLineEOF                -> LAYOUT        
    [\n\r]                                  -> NewLineEOF    
    EOF                                     -> NewLineEOF    
    [a-zA-Z] [a-zA-Z0-9\_\:\.\']*           -> PragmaId      
    [\ ]*                                   -> IgnoreSpace   
    "!" [a-zA-Z] [a-zA-Z0-9\_\/]*           -> PresentableId 
    INT | STRING | Booleano | Float         -> Value         
    "&" [a-zA-Z] ";" "="                    -> BinaryName    
                                            -> EOF           

  lexical restrictions
    CommentChar -/- [\/]
    INT -/- [0-9]
    ID -/- [a-zA-Z0-9\_]
    EOF -/- ~[]
    BackSlashChar -/- [\"]

  context-free restrictions
    LAYOUT? -/- [\ \t\n\r]
    LAYOUT? -/- [\/] . [\/]
    LAYOUT? -/- [\/] . [\*]