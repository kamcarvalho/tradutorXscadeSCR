module src-gen/pp/Variable-pp

imports
  libstratego-gpp
  runtime/tmpl/pp
  src-gen/signatures/Variable-sig


imports
  src-gen/signatures/Common-sig
  src-gen/signatures/NamedType-sig


imports
  src-gen/pp/Common-pp
  src-gen/pp/NamedType-pp


strategies
  prettyprint-example =
    prettyprint-Variable

  prettyprint-example =
    prettyprint-Type

  prettyprint-example =
    prettyprint-Last

  prettyprint-example =
    prettyprint-Pragma

  prettyprint-Variable :
    MonitoredVariable(t1__, t2__, t3__, t4__) -> [ H(
                                                     [SOpt(HS(), "0")]
                                                   , [ S("<Variable name=\"")
                                                     , t1__'
                                                     , S("\">")
                                                     ]
                                                   )
                                                 , t2__'
                                                 , t3__'
                                                 , t4__'
                                                 , H(
                                                     [SOpt(HS(), "0")]
                                                   , [S("</Variable>")]
                                                   )
                                                 ]
    with t1__' := <pp-one-Z(prettyprint-MVAR)> t1__
    with t2__' := <pp-indent(|"2")> [<pp-one-Z(prettyprint-Type)> t2__]
    with t3__' := <pp-indent(|"2")> [<pp-H-list(prettyprint-Last)> t3__]
    with t4__' := <pp-indent(|"2")> [<pp-one-Z(prettyprint-Pragma)> t4__]

  is-Variable =
    ?MonitoredVariable(_, _, _, _)

  prettyprint-Variable :
    MonitoredVariable2(t1__, t2__, t3__, t4__) -> [ H(
                                                      [SOpt(HS(), "0")]
                                                    , [ S("<Variable name=\"")
                                                      , t1__'
                                                      , S("\">")
                                                      ]
                                                    )
                                                  , t2__'
                                                  , t3__'
                                                  , t4__'
                                                  , H(
                                                      [SOpt(HS(), "0")]
                                                    , [S("</Variable>")]
                                                    )
                                                  ]
    with t1__' := <pp-one-Z(prettyprint-Time)> t1__
    with t2__' := <pp-indent(|"2")> [<pp-one-Z(prettyprint-Type)> t2__]
    with t3__' := <pp-indent(|"2")> [<pp-H-list(prettyprint-Last)> t3__]
    with t4__' := <pp-indent(|"2")> [<pp-one-Z(prettyprint-Pragma)> t4__]

  is-Variable =
    ?MonitoredVariable2(_, _, _, _)

  prettyprint-Variable :
    ControlledVariable(t1__, t2__, t3__, t4__) -> [ H(
                                                      [SOpt(HS(), "0")]
                                                    , [ S("<Variable name=\"")
                                                      , t1__'
                                                      , S("\">")
                                                      ]
                                                    )
                                                  , t2__'
                                                  , t3__'
                                                  , t4__'
                                                  , H(
                                                      [SOpt(HS(), "0")]
                                                    , [S("</Variable>")]
                                                    )
                                                  ]
    with t1__' := <pp-one-Z(prettyprint-CVAR)> t1__
    with t2__' := <pp-indent(|"2")> [<pp-one-Z(prettyprint-Type)> t2__]
    with t3__' := <pp-indent(|"2")> [<pp-H-list(prettyprint-Last)> t3__]
    with t4__' := <pp-indent(|"2")> [<pp-one-Z(prettyprint-Pragma)> t4__]

  is-Variable =
    ?ControlledVariable(_, _, _, _)

  prettyprint-Variable :
    TermVariable(t1__, t2__, t3__, t4__) -> [ H(
                                                [SOpt(HS(), "0")]
                                              , [ S("<Variable name=\"")
                                                , t1__'
                                                , S("\">")
                                                ]
                                              )
                                            , t2__'
                                            , t3__'
                                            , t4__'
                                            , H(
                                                [SOpt(HS(), "0")]
                                              , [S("</Variable>")]
                                              )
                                            ]
    with t1__' := <pp-one-Z(prettyprint-TVAR)> t1__
    with t2__' := <pp-indent(|"2")> [<pp-one-Z(prettyprint-Type)> t2__]
    with t3__' := <pp-indent(|"2")> [<pp-H-list(prettyprint-Last)> t3__]
    with t4__' := <pp-indent(|"2")> [<pp-one-Z(prettyprint-Pragma)> t4__]

  is-Variable =
    ?TermVariable(_, _, _, _)

  prettyprint-Variable :
    TermVariable2(t1__, t2__, t3__, t4__) -> [ H(
                                                 [SOpt(HS(), "0")]
                                               , [ S("<Variable name=\"")
                                                 , t1__'
                                                 , S("\">")
                                                 ]
                                               )
                                             , t2__'
                                             , t3__'
                                             , t4__'
                                             , H(
                                                 [SOpt(HS(), "0")]
                                               , [S("</Variable>")]
                                               )
                                             ]
    with t1__' := <pp-one-Z(prettyprint-DUR)> t1__
    with t2__' := <pp-indent(|"2")> [<pp-one-Z(prettyprint-Type)> t2__]
    with t3__' := <pp-indent(|"2")> [<pp-H-list(prettyprint-Last)> t3__]
    with t4__' := <pp-indent(|"2")> [<pp-one-Z(prettyprint-Pragma)> t4__]

  is-Variable =
    ?TermVariable2(_, _, _, _)

  prettyprint-Variable :
    ModeClassVariable(t1__, t2__, t3__, t4__) -> [ H(
                                                     [SOpt(HS(), "0")]
                                                   , [ S("<Variable name=\"")
                                                     , t1__'
                                                     , S("\">")
                                                     ]
                                                   )
                                                 , t2__'
                                                 , t3__'
                                                 , t4__'
                                                 , H(
                                                     [SOpt(HS(), "0")]
                                                   , [S("</Variable>")]
                                                   )
                                                 ]
    with t1__' := <pp-one-Z(prettyprint-MCVAR)> t1__
    with t2__' := <pp-indent(|"2")> [<pp-one-Z(prettyprint-Type)> t2__]
    with t3__' := <pp-indent(|"2")> [<pp-H-list(prettyprint-Last)> t3__]
    with t4__' := <pp-indent(|"2")> [<pp-one-Z(prettyprint-Pragma)> t4__]

  is-Variable =
    ?ModeClassVariable(_, _, _, _)

  prettyprint-Variable :
    GenericVariable(t1__, t2__, t3__, t4__) -> [ H(
                                                   [SOpt(HS(), "0")]
                                                 , [ S("<Variable name=\"")
                                                   , t1__'
                                                   , S("\">")
                                                   ]
                                                 )
                                               , t2__'
                                               , t3__'
                                               , t4__'
                                               , H(
                                                   [SOpt(HS(), "0")]
                                                 , [S("</Variable>")]
                                                 )
                                               ]
    with t1__' := <pp-one-Z(prettyprint-PragmaId)> t1__
    with t2__' := <pp-indent(|"2")> [<pp-one-Z(prettyprint-Type)> t2__]
    with t3__' := <pp-indent(|"2")> [<pp-H-list(prettyprint-Last)> t3__]
    with t4__' := <pp-indent(|"2")> [<pp-one-Z(prettyprint-Pragma)> t4__]

  is-Variable =
    ?GenericVariable(_, _, _, _)

  prettyprint-Type :
    Type(t1__) -> [ H(
                      [SOpt(HS(), "0")]
                    , [S("<type>")]
                    )
                  , t1__'
                  , H(
                      [SOpt(HS(), "0")]
                    , [S("</type>")]
                    )
                  ]
    with t1__' := <pp-indent(|"2")> [<pp-one-Z(prettyprint-NamedType)> t1__]

  is-Type =
    ?Type(_)

  prettyprint-Last :
    LastInt(t1__) -> [ H(
                         [SOpt(HS(), "0")]
                       , [S("<last>")]
                       )
                     , t1__'
                     , H(
                         [SOpt(HS(), "0")]
                       , [S("</last>")]
                       )
                     ]
    with t1__' := <pp-indent(|"2")> [ S("<ConstValue value=\"")
                                    , <pp-one-Z(prettyprint-Value)> t1__
                                    , S("\"/>")
                                    ]

  is-Last =
    ?LastInt(_)

  prettyprint-Last :
    LastIdExpression(t1__) -> [ H(
                                  [SOpt(HS(), "0")]
                                , [S("<last>")]
                                )
                              , t2__'
                              , t3__'
                              , t1__'
                              , t4__'
                              , t5__'
                              , H(
                                  [SOpt(HS(), "0")]
                                , [S("</last>")]
                                )
                              ]
    with t2__' := <pp-indent(|"2")> [S("<IdExpression>")]
    with t3__' := <pp-indent(|"4")> [S("<path>")]
    with t1__' := <pp-indent(|"6")> [ S("<ConstVarRef name=\"")
                                    , <pp-one-Z(prettyprint-PragmaId)> t1__
                                    , S("\"/>")
                                    ]
    with t4__' := <pp-indent(|"4")> [S("</path>")]
    with t5__' := <pp-indent(|"2")> [S("</IdExpression>")]

  is-Last =
    ?LastIdExpression(_)

  prettyprint-Last :
    LastConstruct(t1__) -> [ H(
                               [SOpt(HS(), "0")]
                             , [S("<last>")]
                             )
                           , t2__'
                           , t3__'
                           , t1__'
                           , t4__'
                           , t5__'
                           , H(
                               [SOpt(HS(), "0")]
                             , [S("</last>")]
                             )
                           ]
    with t2__' := <pp-indent(|"2")> [S("<UnaryOp operator=\"-\">")]
    with t3__' := <pp-indent(|"6")> [S("<operand>")]
    with t1__' := <pp-indent(|"8")> [ S("<ConstValue value=\"")
                                    , <pp-one-Z(prettyprint-Value)> t1__
                                    , S("\"/>")
                                    ]
    with t4__' := <pp-indent(|"6")> [S("</operand>")]
    with t5__' := <pp-indent(|"2")> [S("</UnaryOp>")]

  is-Last =
    ?LastConstruct(_)

  prettyprint-Pragma :
    Pragma1(t1__, t2__) -> [ H(
                               [SOpt(HS(), "0")]
                             , [S("<pragmas>")]
                             )
                           , t1__'
                           , H(
                               [SOpt(HS(), "0")]
                             , [S("</pragmas>")]
                             )
                           ]
    with t1__' := <pp-indent(|"2")> [ S("<ed:Variable oid=\"!ed/")
                                    , <pp-one-Z(prettyprint-PragmaId)> t1__
                                    , S("/")
                                    , <pp-one-Z(prettyprint-PragmaId)> t2__
                                    , S("\"/>")
                                    ]

  is-Pragma =
    ?Pragma1(_, _)

  prettyprint-Pragma :
    Pragma2(t1__, t2__, t3__) -> [ H(
                                     [SOpt(HS(), "0")]
                                   , [S("<pragmas>")]
                                   )
                                 , t1__'
                                 , H(
                                     [SOpt(HS(), "0")]
                                   , [S("</pragmas>")]
                                   )
                                 ]
    with t1__' := <pp-indent(|"2")> [ S("<ed:Variable oid=\"!ed/")
                                    , <pp-one-Z(prettyprint-PragmaId)> t1__
                                    , S("/")
                                    , <pp-one-Z(prettyprint-PragmaId)> t2__
                                    , S("/")
                                    , <pp-one-Z(prettyprint-PragmaId)> t3__
                                    , S("\"/>")
                                    ]

  is-Pragma =
    ?Pragma2(_, _, _)

  prettyprint-Pragma :
    Pragma3(t1__, t2__, t3__) -> [ H(
                                     [SOpt(HS(), "0")]
                                   , [S("<pragmas>")]
                                   )
                                 , t1__'
                                 , H(
                                     [SOpt(HS(), "0")]
                                   , [S("</pragmas>")]
                                   )
                                 ]
    with t1__' := <pp-indent(|"2")> [ S("<ed:Variable oid=\"!ed/")
                                    , <pp-one-Z(prettyprint-PragmaId)> t1__
                                    , S("/")
                                    , <pp-one-Z(prettyprint-PragmaId)> t2__
                                    , S("/")
                                    , <pp-one-Z(prettyprint-INT)> t3__
                                    , S("\"/>")
                                    ]

  is-Pragma =
    ?Pragma3(_, _, _)

  prettyprint-Pragma :
    Pragma4(t1__, t2__) -> [ H(
                               [SOpt(HS(), "0")]
                             , [S("<pragmas>")]
                             )
                           , t1__'
                           , H(
                               [SOpt(HS(), "0")]
                             , [S("</pragmas>")]
                             )
                           ]
    with t1__' := <pp-indent(|"2")> [ S("<ed:Variable oid=\"!ed/")
                                    , <pp-one-Z(prettyprint-PragmaId)> t1__
                                    , S("/")
                                    , <pp-one-Z(prettyprint-PragmaId)> t2__
                                    , S("\" />")
                                    ]

  is-Pragma =
    ?Pragma4(_, _)

  is-Variable =
    fail

  is-Type =
    fail

  is-Last =
    fail

  is-Pragma =
    fail