module src-gen/pp/Type-pp

imports
  libstratego-gpp
  runtime/tmpl/pp
  src-gen/signatures/Type-sig


imports
  src-gen/signatures/Common-sig
  src-gen/signatures/NamedType-sig


imports
  src-gen/pp/Common-pp
  src-gen/pp/NamedType-pp


strategies
  prettyprint-example =
    prettyprint-Type

  prettyprint-Type :
    Type(t1__, t2__, t3__) -> [ H(
                                  [SOpt(HS(), "0")]
                                , [ S("<Type name=\"")
                                  , t1__'
                                  , S("\">")
                                  ]
                                )
                              , t4__'
                              , t2__'
                              , t5__'
                              , t6__'
                              , t3__'
                              , t7__'
                              , H(
                                  [SOpt(HS(), "0")]
                                , [S("</Type>")]
                                )
                              ]
    with t1__' := <pp-one-Z(prettyprint-PragmaId)> t1__
    with t4__' := <pp-indent(|"2")> [S("<definition>")]
    with t2__' := <pp-indent(|"4")> [<pp-one-Z(prettyprint-NamedType)> t2__]
    with t5__' := <pp-indent(|"2")> [S("</definition>")]
    with t6__' := <pp-indent(|"2")> [S("<pragmas>")]
    with t3__' := <pp-indent(|"4")> [ S("<ed:Type oid=\"!ed/type/")
                                    , <pp-one-Z(prettyprint-PragmaId)> t3__
                                    , S("\" />")
                                    ]
    with t7__' := <pp-indent(|"2")> [S("</pragmas>")]

  is-Type =
    ?Type(_, _, _)

  is-Type =
    fail