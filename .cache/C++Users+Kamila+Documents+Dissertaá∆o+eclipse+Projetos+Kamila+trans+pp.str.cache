Module("pp",[Imports([Import("libstratego-gpp"),ImportWildcard("lib/runtime/refactoring"),Import("include/Entity-parenthesize"),Import("src-gen/pp/Entity-pp")]),Rules([SDefNoArgs("pp-Entity-string",Seq(CallNoArgs(SVar("parenthesize-Entity")),Seq(CallNoArgs(SVar("prettyprint-SDF-start-symbols")),Seq(Build(NoAnnoList(Op("V",[NoAnnoList(List([])),RootApp(Id)]))),CallT(SVar("box2text-string"),[],[NoAnnoList(Int("120"))]))))),SDefNoArgs("pp-partial-Entity-string",Seq(CallNoArgs(SVar("parenthesize-Entity")),Seq(CallNoArgs(SVar("prettyprint-example")),Seq(Build(NoAnnoList(Op("V",[NoAnnoList(List([])),RootApp(Id)]))),CallT(SVar("box2text-string"),[],[NoAnnoList(Int("120"))]))))),RDefNoArgs("pp-debug",Rule(Var("ast"),Var("result"),[WithClause(LChoice(Assign(Var("result"),App(CallNoArgs(SVar("pp-Entity-string")),Var("ast"))),Seq(BA(Call(SVar("bottomup"),[Call(SVar("try"),[Seq(Not(CallNoArgs(SVar("is-string"))),Seq(Not(CallNoArgs(SVar("is-list"))),Seq(Not(CallNoArgs(SVar("pp-Entity-string"))),Call(SVar("debug"),[Build(NoAnnoList(Str("\"cannot pp \"")))]))))])]),Var("ast")),Assign(Var("result"),NoAnnoList(Str("\"\""))))))]))]),Rules([SDefNoArgs("construct-textual-change",Call(SVar("construct-textual-change"),[CallNoArgs(SVar("pp-partial-Entity-string")),CallNoArgs(SVar("parenthesize")),CallNoArgs(SVar("override-reconstruction")),CallNoArgs(SVar("resugar"))]))])])