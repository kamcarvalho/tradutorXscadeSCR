module(unparameterized("Common"),[],[exports(conc-grammars(conc-grammars(lexical-syntax([prod([char-class(simple-charclass(present(conc(range(short("a"),short("z")),range(short("A"),short("Z")))))),iter-star(char-class(simple-charclass(present(conc(range(short("a"),short("z")),conc(range(short("A"),short("Z")),range(short("0"),short("9"))))))))],sort("ID"),attrs([])),prod([lit("m"),char-class(simple-charclass(present(range(short("A"),short("Z"))))),iter-star(char-class(simple-charclass(present(conc(range(short("a"),short("z")),conc(range(short("A"),short("Z")),range(short("0"),short("9"))))))))],sort("MVAR"),attrs([])),prod([lit("time")],sort("Time"),attrs([])),prod([lit("dur_tDesiredSpeed_true_time_1")],sort("DUR"),attrs([])),prod([lit("c"),char-class(simple-charclass(present(conc(range(short("A"),short("Z")),short("\\_"))))),iter-star(char-class(simple-charclass(present(conc(range(short("a"),short("z")),conc(range(short("A"),short("Z")),conc(range(short("0"),short("9")),short("\\_"))))))))],sort("CVAR"),attrs([])),prod([lit("mc"),char-class(simple-charclass(present(conc(range(short("A"),short("Z")),short("\\_"))))),iter-star(char-class(simple-charclass(present(conc(range(short("a"),short("z")),conc(range(short("A"),short("Z")),range(short("0"),short("9"))))))))],sort("MCVAR"),attrs([])),prod([lit("t"),char-class(simple-charclass(present(conc(range(short("A"),short("Z")),short("\\_"))))),iter-star(char-class(simple-charclass(present(conc(range(short("a"),short("z")),conc(range(short("A"),short("Z")),range(short("0"),short("9"))))))))],sort("TVAR"),attrs([])),prod([alt(sort("MVAR"),alt(sort("CVAR"),alt(sort("MCVAR"),alt(sort("TVAR"),alt(sort("Time"),sort("DUR"))))))],sort("OPNAME"),attrs([])),prod([alt(lit("node"),alt(lit("function"),lit("assume")))],sort("OPKIND"),attrs([])),prod([opt(lit("-")),iter(char-class(simple-charclass(present(range(short("0"),short("9"))))))],sort("INT"),attrs([])),prod([iter-star(char-class(simple-charclass(present(range(short("0"),short("9"))))))],sort("Number"),attrs([])),prod([iter-star(char-class(simple-charclass(present(conc(range(short("a"),short("z")),conc(range(short("A"),short("Z")),short("\\'")))))))],sort("STRING"),attrs([])),prod([alt(lit("true"),lit("false"))],sort("Booleano"),attrs([])),prod([iter-star(char-class(simple-charclass(present(conc(range(short("0"),short("9")),conc(short("\\."),short("\\-")))))))],sort("Float"),attrs([])),prod([alt(sort("INT"),sort("Booleano"))],sort("TYPE"),attrs([])),prod([char-class(comp(simple-charclass(present(conc(short("\\\""),short("\\n"))))))],sort("StringChar"),attrs([])),prod([lit("\\\\\\\"")],sort("StringChar"),attrs([])),prod([sort("BackSlashChar")],sort("StringChar"),attrs([])),prod([lit("\\\\")],sort("BackSlashChar"),attrs([])),prod([char-class(simple-charclass(present(conc(short("\\ "),conc(short("\\t"),conc(short("\\n"),short("\\r")))))))],layout,attrs([])),prod([char-class(simple-charclass(present(short("\\*"))))],sort("CommentChar"),attrs([])),prod([lit("/*"),iter-star(sort("InsideComment")),lit("*/")],layout,attrs([])),prod([char-class(comp(simple-charclass(present(short("\\*")))))],sort("InsideComment"),attrs([])),prod([sort("CommentChar")],sort("InsideComment"),attrs([])),prod([lit("//"),iter-star(char-class(comp(simple-charclass(present(conc(short("\\n"),short("\\r"))))))),sort("NewLineEOF")],layout,attrs([])),prod([char-class(simple-charclass(present(conc(short("\\n"),short("\\r")))))],sort("NewLineEOF"),attrs([])),prod([sort("EOF")],sort("NewLineEOF"),attrs([])),prod([char-class(simple-charclass(present(conc(range(short("a"),short("z")),range(short("A"),short("Z")))))),iter-star(char-class(simple-charclass(present(conc(range(short("a"),short("z")),conc(range(short("A"),short("Z")),conc(range(short("0"),short("9")),conc(short("\\_"),conc(short("\\:"),conc(short("\\."),short("\\'")))))))))))],sort("PragmaId"),attrs([])),prod([iter-star(char-class(simple-charclass(present(short("\\ ")))))],sort("IgnoreSpace"),attrs([])),prod([lit("!"),char-class(simple-charclass(present(conc(range(short("a"),short("z")),range(short("A"),short("Z")))))),iter-star(char-class(simple-charclass(present(conc(range(short("a"),short("z")),conc(range(short("A"),short("Z")),conc(range(short("0"),short("9")),conc(short("\\_"),short("\\/")))))))))],sort("PresentableId"),attrs([])),prod([alt(sort("INT"),alt(sort("STRING"),alt(sort("Booleano"),sort("Float"))))],sort("Value"),attrs([])),prod([lit("&"),char-class(simple-charclass(present(conc(range(short("a"),short("z")),range(short("A"),short("Z")))))),lit(";"),lit("=")],sort("BinaryName"),attrs([])),prod([],sort("EOF"),attrs([]))]),lexical-restrictions([follow([sort("CommentChar")],single(char-class(simple-charclass(present(short("\\/")))))),follow([sort("INT")],single(char-class(simple-charclass(present(range(short("0"),short("9"))))))),follow([sort("ID")],single(char-class(simple-charclass(present(conc(range(short("a"),short("z")),conc(range(short("A"),short("Z")),conc(range(short("0"),short("9")),short("\\_"))))))))),follow([sort("EOF")],single(char-class(comp(simple-charclass(absent))))),follow([sort("BackSlashChar")],single(char-class(simple-charclass(present(short("\\\""))))))])),context-free-restrictions([follow([opt(layout)],single(char-class(simple-charclass(present(conc(short("\\ "),conc(short("\\t"),conc(short("\\n"),short("\\r"))))))))),follow([opt(layout)],single(seq(simple-charclass(present(short("\\/"))),single(char-class(simple-charclass(present(short("\\/")))))))),follow([opt(layout)],single(seq(simple-charclass(present(short("\\/"))),single(char-class(simple-charclass(present(short("\\*"))))))))])))])