Module("java",[Imports([Import("include/Entity")]),Rules([RDefNoArgs("to-java",RuleNoCond(NoAnnoList(List([Wld])),App(CallNoArgs(SVar("concat-strings")),RootApp(Call(SVar("map"),[CallNoArgs(SVar("to-java"))]))))),RDefNoArgs("to-java",RuleNoCond(NoAnnoList(Tuple([])),NoAnnoList(Str("\"\"")))),RDefNoArgs("to-java",Rule(NoAnnoList(Op("Module",[Var("x"),Var(ListVar("d*"))])),NoAnnoList(StringQuotation1("  		  ",[QStr(" spec "),StringEscape1("  		        ",Var("x")),QStr("\n  			"),StringEscape1("  			",Var(ListVar("d'*"))),QStr("\n  		")])),[WithClause(Assign(Var(ListVar("d'*")),App(CallNoArgs(SVar("to-java")),Var(ListVar("d*")))))])),RDefNoArgs("to-java",Rule(NoAnnoList(Op("Entity",[Var("x"),Var(ListVar("p*"))])),NoAnnoList(StringQuotation1("      ",[QStr(" class "),StringEscape1("             ",Var("x")),QStr(" {\n           "),StringEscape1("           ",Var(ListVar("p'*"))),QStr("\n       }\n     ")])),[WithClause(Assign(Var(ListVar("p'*")),App(CallNoArgs(SVar("to-java")),Var(ListVar("p*")))))])),RDefNoArgs("to-java",RuleNoCond(NoAnnoList(Op("Property",[Var("x"),NoAnnoList(Op("Type",[Var("t")]))])),NoAnnoList(StringQuotation1("                              ",[QStr("\n      private "),StringEscape1("              ",Var("t")),QStr(" "),StringEscape1("                  ",Var("x")),QStr(";\n      \n      public "),StringEscape1("             ",Var("t")),QStr(" get_"),StringEscape1("                     ",Var("x")),QStr("() {\n          return "),StringEscape1("                 ",Var("x")),QStr(";\n      }\n      \n      public void set_"),StringEscape1("                      ",Var("x")),QStr(" ("),StringEscape1("                           ",Var("t")),QStr(" "),StringEscape1("                               ",Var("x")),QStr(") {\n          this."),StringEscape1("               ",Var("x")),QStr(" = "),StringEscape1("                     ",Var("x")),QStr(";    \n      }\n  ")])))),RDefNoArgs("to-java",RuleNoCond(NoAnnoList(Op("Type",[Var("t")])),Var("t"))),RDefNoArgs("to-java",RuleNoCond(Var(ListVar("t*")),App(Call(SVar("map"),[CallNoArgs(SVar("to-java"))]),Var(ListVar("t*")))))])])