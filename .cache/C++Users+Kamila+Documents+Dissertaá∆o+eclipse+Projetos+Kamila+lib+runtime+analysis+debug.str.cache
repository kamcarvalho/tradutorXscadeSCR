Module("runtime/analysis/debug",[Imports([Import("runtime/index/core"),Import("runtime/index/query"),Import("runtime/task/core"),Import("runtime/task/debug"),Import("runtime/task/insert"),Import("runtime/editor/interop"),Import("runtime/nabl/entries"),Import("runtime/nabl/uri")]),Rules([SDefT("analysis-debug-show-all-partitions",[],[DefaultVarDec("language")],CallT(SVar("analysis-debug-index-project"),[],[Var("language")])),SDefT("analysis-debug-show-current-partition",[],[DefaultVarDec("language")],CallT(SVar("analysis-debug-index-partition"),[],[Var("language")])),RDefT("analysis-debug-index-project",[],[DefaultVarDec("language")],Rule(NoAnnoList(Tuple([Wld,Wld,Wld,Var("path"),Var("project-path")])),NoAnnoList(Tuple([Var("filename"),Var("result")])),[WithClause(Seq(CallT(SVar("index-setup"),[],[Var("language"),Var("project-path")]),Seq(Assign(Var("result-ast"),RootApp(Seq(CallNoArgs(SVar("index-get-all-sources")),Call(SVar("map"),[LRule(RuleNoCond(Var("f"),NoAnnoList(Tuple([Var("f"),App(CallNoArgs(SVar("index-get-all-pairs-in-source")),Var("f"))]))))])))),CondChoice(Assign(Var("result-index"),App(CallT(SVar("foreign-call"),[],[NoAnnoList(Str("\"Analysis\"")),NoAnnoList(Str("\"from-index-debug-str\""))]),Var("result-ast"))),Seq(Assign(Var("filename"),NoAnnoList(StringQuotation1("                      ",[StringEscape1("                      ",Var("project-path")),QStr("/"),StringEscape1("                                     ",App(CallNoArgs(SVar("dirname")),Var("path"))),QStr("/project.index")]))),Assign(Var("result"),Var("result-index"))),Seq(Assign(Var("filename"),NoAnnoList(StringQuotation1("                      ",[StringEscape1("                      ",Var("project-path")),QStr("/"),StringEscape1("                                     ",App(CallNoArgs(SVar("dirname")),Var("path"))),QStr("/index.project.aterm")]))),Assign(Var("result"),Var("result-ast")))))))])),RDefT("analysis-debug-index-project-resolve",[],[DefaultVarDec("language")],Rule(NoAnnoList(Tuple([Wld,Wld,Wld,Var("path"),Var("project-path")])),NoAnnoList(Tuple([Var("filename"),Var("result")])),[WithClause(Seq(CallT(SVar("index-setup"),[],[Var("language"),Var("project-path")]),Seq(CallT(SVar("task-setup"),[],[Var("project-path")]),Seq(Assign(Var("result-ast"),RootApp(Seq(CallNoArgs(SVar("index-get-all-sources")),Call(SVar("map"),[LRule(RuleNoCond(Var("f"),NoAnnoList(Tuple([Var("f"),App(CallNoArgs(SVar("index-get-all-pairs-in-source")),Var("f"))]))))])))),Seq(Assign(Var("result-ast'"),App(CallNoArgs(SVar("beautify-indices")),Var("result-ast"))),CondChoice(Assign(Var("result-index"),App(CallT(SVar("foreign-call"),[],[NoAnnoList(Str("\"Analysis\"")),NoAnnoList(Str("\"from-index-debug-str\""))]),Var("result-ast'"))),Seq(Assign(Var("filename"),NoAnnoList(StringQuotation1("                  ",[StringEscape1("                  ",Var("project-path")),QStr("/"),StringEscape1("                                 ",App(CallNoArgs(SVar("dirname")),Var("path"))),QStr("/project.index")]))),Assign(Var("result"),Var("result-index"))),Seq(Assign(Var("filename"),NoAnnoList(StringQuotation1("                  ",[StringEscape1("                  ",Var("project-path")),QStr("/"),StringEscape1("                                 ",App(CallNoArgs(SVar("dirname")),Var("path"))),QStr("/index.project.aterm")]))),Assign(Var("result"),Var("result-ast'")))))))))])),RDefT("analysis-debug-index-partition",[],[DefaultVarDec("language")],Rule(NoAnnoList(Tuple([Wld,Wld,Wld,Var("path"),Var("project-path")])),NoAnnoList(Tuple([Var("filename"),Var("result")])),[WithClause(Seq(CallT(SVar("index-setup"),[],[Var("language"),Var("project-path")]),Seq(Assign(Var("partition"),NoAnnoList(StringQuotation1("                      ",[StringEscape1("                      ",Var("project-path")),QStr("/"),StringEscape1("                                     ",Var("path"))]))),Seq(Assign(Var("result-ast"),NoAnnoList(List([NoAnnoList(Tuple([Var("partition"),App(CallNoArgs(SVar("index-get-all-pairs-in-source")),Var("partition"))]))]))),CondChoice(Assign(Var("result-index"),App(CallT(SVar("foreign-call"),[],[NoAnnoList(Str("\"Analysis\"")),NoAnnoList(Str("\"from-index-debug-str\""))]),Var("result-ast"))),Seq(Assign(Var("filename"),App(CallT(SVar("guarantee-extension"),[],[NoAnnoList(Str("\"partition.index\""))]),Var("path"))),Assign(Var("result"),Var("result-index"))),Seq(Assign(Var("filename"),App(CallT(SVar("guarantee-extension"),[],[NoAnnoList(Str("\"index.partition.aterm\""))]),Var("path"))),Assign(Var("result"),Var("result-ast"))))))))])),RDefT("analysis-debug-index-partition-resolve",[],[DefaultVarDec("language")],Rule(NoAnnoList(Tuple([Wld,Wld,Wld,Var("path"),Var("project-path")])),NoAnnoList(Tuple([Var("filename"),Var("result")])),[WithClause(Seq(CallT(SVar("index-setup"),[],[Var("language"),Var("project-path")]),Seq(CallT(SVar("task-setup"),[],[Var("project-path")]),Seq(Assign(Var("partition"),NoAnnoList(StringQuotation1("                      ",[StringEscape1("                      ",Var("project-path")),QStr("/"),StringEscape1("                                     ",Var("path"))]))),Seq(Assign(Var("result-ast"),NoAnnoList(List([NoAnnoList(Tuple([NoAnnoList(Tuple([Var("partition"),NoAnnoList(List([]))])),App(CallNoArgs(SVar("index-get-all-pairs-in-source")),Var("partition"))]))]))),Seq(Assign(Var("result-ast'"),App(CallNoArgs(SVar("beautify-indices")),Var("result-ast"))),CondChoice(Assign(Var("result-index"),App(CallT(SVar("foreign-call"),[],[NoAnnoList(Str("\"Analysis\"")),NoAnnoList(Str("\"from-index-debug-str\""))]),Var("result-ast'"))),Seq(Assign(Var("filename"),App(CallT(SVar("guarantee-extension"),[],[NoAnnoList(Str("\"partition.index\""))]),Var("path"))),Assign(Var("result"),Var("result-index"))),Seq(Assign(Var("filename"),App(CallT(SVar("guarantee-extension"),[],[NoAnnoList(Str("\"index.partition.aterm\""))]),Var("path"))),Assign(Var("result"),Var("result-ast'"))))))))))]))]),Rules([SDefT("analysis-debug-show-tasks",[],[DefaultVarDec("language")],CallT(SVar("analysis-debug-task-partition"),[],[Var("language")])),SDefT("analysis-debug-show-tasks-selection",[],[DefaultVarDec("language")],CallT(SVar("analysis-debug-task-selection"),[],[Var("language")])),RDefT("analysis-debug-task-project",[],[DefaultVarDec("language")],Rule(NoAnnoList(Tuple([Wld,Wld,Wld,Var("path"),Var("project-path")])),NoAnnoList(Tuple([Var("filename"),Var("result")])),[WithClause(Seq(CallT(SVar("task-setup"),[],[Var("project-path")]),Seq(Assign(Var("result-ast"),RootApp(CallT(SVar("task-debug-info"),[],[NoAnnoList(Tuple([]))]))),CondChoice(Assign(Var("result-task"),App(CallT(SVar("foreign-call"),[],[NoAnnoList(Str("\"Analysis\"")),NoAnnoList(Str("\"from-task-debug-str\""))]),Var("result-ast"))),Seq(Assign(Var("filename"),NoAnnoList(StringQuotation1("                      ",[StringEscape1("                      ",Var("project-path")),QStr("/"),StringEscape1("                                     ",App(CallNoArgs(SVar("dirname")),Var("path"))),QStr("/project.task")]))),Assign(Var("result"),Var("result-task"))),Seq(Assign(Var("filename"),NoAnnoList(StringQuotation1("                      ",[StringEscape1("                      ",Var("project-path")),QStr("/"),StringEscape1("                                     ",App(CallNoArgs(SVar("dirname")),Var("path"))),QStr("/task.project.aterm")]))),Assign(Var("result"),Var("result-ast")))))))])),RDefT("analysis-debug-task-partition",[],[DefaultVarDec("language")],Rule(NoAnnoList(Tuple([Wld,Wld,Wld,Var("path"),Var("project-path")])),NoAnnoList(Tuple([Var("filename"),Var("result")])),[WithClause(Seq(CallT(SVar("task-setup"),[],[Var("project-path")]),Seq(Assign(Var("partition"),NoAnnoList(StringQuotation1("                      ",[StringEscape1("                      ",Var("project-path")),QStr("/"),StringEscape1("                                     ",Var("path"))]))),Seq(Assign(Var("result-ast"),RootApp(CallT(SVar("task-debug-info"),[],[Var("partition")]))),CondChoice(Assign(Var("result-task"),App(CallT(SVar("foreign-call"),[],[NoAnnoList(Str("\"Analysis\"")),NoAnnoList(Str("\"from-task-debug-str\""))]),Var("result-ast"))),Seq(Assign(Var("filename"),App(CallT(SVar("guarantee-extension"),[],[NoAnnoList(Str("\"partition.task\""))]),Var("path"))),Assign(Var("result"),Var("result-task"))),Seq(Assign(Var("filename"),App(CallT(SVar("guarantee-extension"),[],[NoAnnoList(Str("\"task.partition.aterm\""))]),Var("path"))),Assign(Var("result"),Var("result-ast"))))))))])),RDefT("analysis-debug-task-selection",[],[DefaultVarDec("language")],Rule(NoAnnoList(Tuple([Var("selected"),Wld,Wld,Var("path"),Var("project-path")])),NoAnnoList(Tuple([Var("filename"),Var("result")])),[WithClause(Seq(CallT(SVar("task-setup"),[],[Var("project-path")]),Seq(Assign(Var("partition"),NoAnnoList(StringQuotation1("                      ",[StringEscape1("                      ",Var("project-path")),QStr("/"),StringEscape1("                                     ",Var("path"))]))),Seq(Assign(Var("result-ast"),App(CallNoArgs(SVar("task-debug-ast")),Var("selected"))),CondChoice(Assign(Var("result-task"),App(CallT(SVar("foreign-call"),[],[NoAnnoList(Str("\"Analysis\"")),NoAnnoList(Str("\"from-task-debug-str\""))]),Var("result-ast"))),Seq(Assign(Var("filename"),App(CallT(SVar("guarantee-extension"),[],[NoAnnoList(Str("\"selection.task\""))]),Var("path"))),Assign(Var("result"),Var("result-task"))),Seq(Assign(Var("filename"),App(CallT(SVar("guarantee-extension"),[],[NoAnnoList(Str("\"task.selection.aterm\""))]),Var("path"))),Assign(Var("result"),Var("result-ast"))))))))]))]),Rules([RDefT("analysis-debug-project",[],[DefaultVarDec("language")],Rule(NoAnnoList(Tuple([Wld,Wld,Wld,Var("path"),Var("project-path")])),NoAnnoList(Tuple([Var("filename"),Var("result")])),[WithClause(Seq(CallT(SVar("index-setup"),[],[Var("language"),Var("project-path")]),Seq(CallT(SVar("task-setup"),[],[Var("project-path")]),Seq(Assign(Var("task-debug"),RootApp(CallT(SVar("task-debug-info"),[],[NoAnnoList(Tuple([]))]))),Seq(Assign(Var("index-debug"),RootApp(Seq(CallNoArgs(SVar("index-get-all-sources")),Call(SVar("map"),[LRule(RuleNoCond(Var("f"),NoAnnoList(Tuple([Var("f"),App(Seq(CallNoArgs(SVar("index-get-all-pairs-in-source")),CallNoArgs(SVar("sort-index"))),Var("f"))]))))])))),Seq(Assign(Var("result-ast"),NoAnnoList(Tuple([Var("task-debug"),Var("index-debug")]))),CondChoice(Assign(Var("result-analysis"),App(CallT(SVar("foreign-call"),[],[NoAnnoList(Str("\"Analysis\"")),NoAnnoList(Str("\"from-debug-str\""))]),Var("result-ast"))),Seq(Assign(Var("filename"),NoAnnoList(StringQuotation1("                      ",[StringEscape1("                      ",Var("project-path")),QStr("/"),StringEscape1("                                     ",App(CallNoArgs(SVar("dirname")),Var("path"))),QStr("/project.analysis")]))),Assign(Var("result"),Var("result-analysis"))),Seq(Assign(Var("filename"),NoAnnoList(StringQuotation1("                      ",[StringEscape1("                      ",Var("project-path")),QStr("/"),StringEscape1("                                     ",App(CallNoArgs(SVar("dirname")),Var("path"))),QStr("/analysis.project.aterm")]))),Assign(Var("result"),Var("result-ast"))))))))))])),RDefT("analysis-debug-partition",[],[DefaultVarDec("language")],Rule(NoAnnoList(Tuple([Wld,Wld,Wld,Var("path"),Var("project-path")])),NoAnnoList(Tuple([Var("filename"),Var("result")])),[WithClause(Seq(CallT(SVar("index-setup"),[],[Var("language"),Var("project-path")]),Seq(CallT(SVar("task-setup"),[],[Var("project-path")]),Seq(Assign(Var("partition"),NoAnnoList(StringQuotation1("                       ",[StringEscape1("                       ",Var("project-path")),QStr("/"),StringEscape1("                                      ",Var("path"))]))),Seq(Assign(Var("task-debug"),RootApp(CallT(SVar("task-debug-info"),[],[Var("partition")]))),Seq(Assign(Var("index-debug"),NoAnnoList(List([NoAnnoList(Tuple([Var("partition"),App(Seq(CallNoArgs(SVar("index-get-all-pairs-in-source")),CallNoArgs(SVar("sort-index"))),Var("partition"))]))]))),Seq(Assign(Var("result-ast"),NoAnnoList(Tuple([Var("task-debug"),Var("index-debug")]))),CondChoice(Assign(Var("result-analysis"),App(CallT(SVar("foreign-call"),[],[NoAnnoList(Str("\"Analysis\"")),NoAnnoList(Str("\"from-debug-str\""))]),Var("result-ast"))),Seq(Assign(Var("filename"),App(CallT(SVar("guarantee-extension"),[],[NoAnnoList(Str("\"partition.analysis\""))]),Var("path"))),Assign(Var("result"),Var("result-analysis"))),Seq(Assign(Var("filename"),App(CallT(SVar("guarantee-extension"),[],[NoAnnoList(Str("\"partition.aterm\""))]),Var("path"))),Assign(Var("result"),Var("result-ast")))))))))))]))]),Rules([RDefT("analysis-debug-reset-index",[],[DefaultVarDec("language")],Rule(NoAnnoList(Tuple([Wld,Wld,Wld,Var("path"),Var("project-path")])),NoAnnoList(Op("None",[])),[WithClause(Seq(Assign(Var("partition"),NoAnnoList(StringQuotation1("                     ",[StringEscape1("                     ",Var("project-path")),QStr("/"),StringEscape1("                                    ",Var("path"))]))),Seq(CallT(SVar("index-setup"),[],[Var("language"),Var("project-path")]),CallNoArgs(SVar("index-reset")))))])),RDefT("analysis-debug-reset-task",[],[DefaultVarDec("language")],Rule(NoAnnoList(Tuple([Wld,Wld,Wld,Var("path"),Var("project-path")])),NoAnnoList(Op("None",[])),[WithClause(Seq(CallT(SVar("task-setup"),[],[Var("project-path")]),CallNoArgs(SVar("task-reset"))))])),RDefT("analysis-debug-reanalyze",[],[DefaultVarDec("language")],Rule(NoAnnoList(Tuple([Wld,Wld,Wld,Var("path"),Var("project-path")])),NoAnnoList(Op("None",[])),[WithClause(Seq(Assign(Var("partition"),NoAnnoList(StringQuotation1("                     ",[StringEscape1("                     ",Var("project-path")),QStr("/"),StringEscape1("                                    ",Var("path"))]))),Seq(CallT(SVar("task-setup"),[],[Var("project-path")]),Seq(CallNoArgs(SVar("task-reset")),Seq(CallT(SVar("index-setup"),[],[Var("language"),Var("project-path")]),CallNoArgs(SVar("index-reload")))))))]))]),Rules([RDefNoArgs("beautify-indices",Rule(Var("indices"),Var("indices''"),Seq(Assign(Var("indices'"),App(Call(SVar("filter"),[CallNoArgs(SVar("ignore-extension"))]),Var("indices"))),Assign(Var("indices''"),App(Call(SVar("map"),[CallNoArgs(SVar("beautify-index"))]),Var("indices'")))))),RDefNoArgs("beautify-index",Rule(NoAnnoList(Tuple([Var("partition"),Var("index")])),NoAnnoList(Tuple([Var("partition"),Var("index4")])),Seq(Assign(Var("index2"),App(CallNoArgs(SVar("give-all-tasks-results")),Var("index"))),Seq(Assign(Var("index3"),App(CallNoArgs(SVar("reverse-uris")),Var("index2"))),Assign(Var("index4"),App(CallNoArgs(SVar("sort-index")),Var("index3"))))))),RDefNoArgs("ignore-extensions",RuleNoCond(Wld,NoAnnoList(List([NoAnnoList(Str("\"index\"")),NoAnnoList(Str("\"analysis\"")),NoAnnoList(Str("\"task\""))])))),RDefNoArgs("ignore-extension",Rule(NoAnnoList(Tuple([Var("partition"),Var("index")])),NoAnnoList(Tuple([Var("partition"),Var("index")])),Seq(Assign(NoAnnoList(Tuple([Var("path"),Wld])),Var("partition")),Seq(Assign(Var("extension"),App(CallNoArgs(SVar("get-extension")),Var("path"))),BA(Not(CallNoArgs(SVar("elem"))),NoAnnoList(Tuple([Var("extension"),RootApp(CallNoArgs(SVar("ignore-extensions")))]))))))),SDefNoArgs("give-all-tasks-results",Call(SVar("bottomup"),[Call(SVar("try"),[CallNoArgs(SVar("give-task-results"))])])),RDefNoArgs("give-task-results",RuleNoCond(As(Var("e"),NoAnnoList(Op("Result",[Wld]))),App(LChoice(CallNoArgs(SVar("insert-results-or-delay")),CallT(SVar("with"),[Fail],[NoAnnoList(Str("\"Task has no result yet: \""))])),Var("e")))),SDefNoArgs("sort-index",Call(SVar("qsort"),[CallNoArgs(SVar("index-compare"))])),RDefNoArgs("index-ordering",RuleNoCond(Wld,NoAnnoList(List([NoAnnoList(Str("\"Def\"")),NoAnnoList(Str("\"Prop\"")),NoAnnoList(Str("\"RelTuple\"")),NoAnnoList(Str("\"Alias\"")),NoAnnoList(Str("\"InverseAlias\"")),NoAnnoList(Str("\"Use\""))])))),RDefNoArgs("index-compare",Rule(NoAnnoList(Tuple([NoAnnoList(Tuple([Var("a"),Wld])),NoAnnoList(Tuple([Var("b"),Wld]))])),RootApp(Id),Seq(Assign(Var("a-order"),App(CallNoArgs(SVar("get-index")),NoAnnoList(Tuple([App(CallNoArgs(SVar("get-constructor")),Var("a")),RootApp(CallNoArgs(SVar("index-ordering")))])))),Seq(Assign(Var("b-order"),App(CallNoArgs(SVar("get-index")),NoAnnoList(Tuple([App(CallNoArgs(SVar("get-constructor")),Var("b")),RootApp(CallNoArgs(SVar("index-ordering")))])))),CondChoice(BA(CallNoArgs(SVar("eq")),NoAnnoList(Tuple([Var("a-order"),Var("b-order")]))),Seq(CondChoice(Assign(NoAnnoList(Op("Use",[Wld])),Var("a")),Seq(Assign(NoAnnoList(Op("Use",[NoAnnoList(List([NoAnnoList(Op("Def",[NoAnnoList(Op("URI",[Wld,Var("a-url")]))]))]))])),Var("a")),Assign(NoAnnoList(Op("Use",[NoAnnoList(List([NoAnnoList(Op("Def",[NoAnnoList(Op("URI",[Wld,Var("b-url")]))]))]))])),Var("b"))),Seq(Assign(NoAnnoList(ListTail([NoAnnoList(Op("URI",[Wld,Var("a-url")]))],Wld)),App(CallNoArgs(SVar("get-arguments")),Var("a"))),Assign(NoAnnoList(ListTail([NoAnnoList(Op("URI",[Wld,Var("b-url")]))],Wld)),App(CallNoArgs(SVar("get-arguments")),Var("b"))))),CondChoice(BA(CallNoArgs(SVar("eq")),NoAnnoList(Tuple([Var("a-url"),Var("b-url")]))),Seq(Assign(NoAnnoList(List([Wld,Var("a-ty")])),App(CallNoArgs(SVar("get-arguments")),Var("a"))),Seq(Assign(NoAnnoList(List([Wld,Var("b-ty")])),App(CallNoArgs(SVar("get-arguments")),Var("b"))),BA(CallNoArgs(SVar("string-lt")),NoAnnoList(Tuple([App(CallNoArgs(SVar("write-to-string")),Var("a-ty")),App(CallNoArgs(SVar("write-to-string")),Var("b-ty"))]))))),BA(CallNoArgs(SVar("uri-compare")),NoAnnoList(Tuple([Var("a-url"),Var("b-url")]))))),Assign(Var("cmp-o"),App(CallNoArgs(SVar("lt")),NoAnnoList(Tuple([Var("a-order"),Var("b-order")]))))))))),RDefNoArgs("uri-compare",RuleNoCond(NoAnnoList(Tuple([NoAnnoList(List([])),NoAnnoList(List([]))])),RootApp(Fail))),RDefNoArgs("uri-compare",RuleNoCond(NoAnnoList(Tuple([Var("a"),NoAnnoList(List([]))])),RootApp(Fail))),RDefNoArgs("uri-compare",RuleNoCond(NoAnnoList(Tuple([NoAnnoList(List([])),Var("b")])),NoAnnoList(Tuple([NoAnnoList(List([])),Var("b")])))),RDefNoArgs("uri-compare",Rule(NoAnnoList(Tuple([NoAnnoList(ListTail([Var("a")],Var("as"))),NoAnnoList(ListTail([Var("b")],Var("bs")))])),NoAnnoList(Tuple([NoAnnoList(ListTail([Var("a")],Var("as"))),NoAnnoList(ListTail([Var("b")],Var("bs")))])),Seq(Assign(NoAnnoList(Op("ID",[Var("a-namespace"),Var("a-name"),Wld])),Var("a")),Seq(Assign(NoAnnoList(Op("ID",[Var("b-namespace"),Var("b-name"),Wld])),Var("b")),CondChoice(BA(CallNoArgs(SVar("eq")),NoAnnoList(Tuple([Var("a-namespace"),Var("b-namespace")]))),CondChoice(BA(CallNoArgs(SVar("eq")),NoAnnoList(Tuple([Var("a-name"),Var("b-name")]))),BA(CallNoArgs(SVar("uri-compare")),NoAnnoList(Tuple([Var("as"),Var("bs")]))),BA(CallNoArgs(SVar("string-lt")),NoAnnoList(Tuple([Var("a-name"),Var("b-name")])))),BA(CallNoArgs(SVar("string-lt")),NoAnnoList(Tuple([App(CallNoArgs(SVar("get-constructor")),Var("a-namespace")),App(CallNoArgs(SVar("get-constructor")),Var("b-namespace"))])))))))),RDefNoArgs("uri-compare",RuleNoCond(NoAnnoList(Tuple([NoAnnoList(ListTail([As(Var("a"),NoAnnoList(Op("Anonymous",[Wld])))],Var("as"))),NoAnnoList(ListTail([As(Var("b"),NoAnnoList(Op("ID",[Wld,Wld,Wld])))],Var("bs")))])),RootApp(Fail))),RDefNoArgs("uri-compare",RuleNoCond(NoAnnoList(Tuple([NoAnnoList(ListTail([As(Var("a"),NoAnnoList(Op("ID",[Wld,Wld,Wld])))],Var("as"))),NoAnnoList(ListTail([As(Var("b"),NoAnnoList(Op("Anonymous",[Wld])))],Var("bs")))])),NoAnnoList(Tuple([NoAnnoList(ListTail([Var("a")],Var("as"))),NoAnnoList(ListTail([Var("b")],Var("bs")))])))),RDefNoArgs("uri-compare",Rule(NoAnnoList(Tuple([NoAnnoList(ListTail([NoAnnoList(Op("Anonymous",[Var("a")]))],Var("as"))),NoAnnoList(ListTail([NoAnnoList(Op("Anonymous",[Var("b")]))],Var("bs")))])),NoAnnoList(Tuple([NoAnnoList(ListTail([Var("a")],Var("as"))),NoAnnoList(ListTail([Var("b")],Var("bs")))])),CondChoice(BA(CallNoArgs(SVar("eq")),NoAnnoList(Tuple([Var("a"),Var("b")]))),BA(CallNoArgs(SVar("uri-compare")),NoAnnoList(Tuple([Var("as"),Var("bs")]))),Seq(Assign(Var("a-len"),App(CallNoArgs(SVar("strlen")),Var("a"))),Seq(Assign(Var("b-len"),App(CallNoArgs(SVar("strlen")),Var("b"))),CondChoice(BA(CallNoArgs(SVar("eq")),NoAnnoList(Tuple([Var("a-len"),Var("b-len")]))),BA(CallNoArgs(SVar("string-lt")),NoAnnoList(Tuple([Var("a"),Var("b")]))),BA(CallNoArgs(SVar("lt")),NoAnnoList(Tuple([Var("a-len"),Var("b-len")]))))))))),SDefNoArgs("reverse-uris",Call(SVar("bottomup"),[Call(SVar("try"),[CallNoArgs(SVar("reverse-uri"))])])),RDefNoArgs("reverse-uri",RuleNoCond(NoAnnoList(Op("URI",[Var("language"),Var("uri")])),NoAnnoList(Op("URI",[Var("language"),App(CallNoArgs(SVar("reverse")),Var("uri"))]))))])])