Module("runtime/task/new-messages",[Imports([Import("runtime/task/core"),Import("runtime/task/create"),Import("runtime/editor/origins"),Import("runtime/task/messages")]),Signature([Sorts([SortNoArgs("Message"),SortNoArgs("MessageTrigger")]),Constructors([OpDecl("Error",FunType([ConstType(SortNoArgs("Origin")),ConstType(SortNoArgs("Term")),ConstType(SortNoArgs("Msg"))],ConstType(SortNoArgs("Message")))),OpDecl("Warning",FunType([ConstType(SortNoArgs("Origin")),ConstType(SortNoArgs("Term")),ConstType(SortNoArgs("Msg"))],ConstType(SortNoArgs("Message")))),OpDecl("Note",FunType([ConstType(SortNoArgs("Origin")),ConstType(SortNoArgs("Term")),ConstType(SortNoArgs("Msg"))],ConstType(SortNoArgs("Message")))),OpDecl("Failure",FunType([ConstType(Sort("List",[SortNoArgs("Result")]))],ConstType(SortNoArgs("MessageTrigger")))),OpDecl("Success",FunType([ConstType(Sort("List",[SortNoArgs("Result")]))],ConstType(SortNoArgs("MessageTrigger")))),OpDecl("Multiple",FunType([ConstType(Sort("List",[SortNoArgs("Result")]))],ConstType(SortNoArgs("MessageTrigger")))),OpDecl("Message",FunType([ConstType(SortNoArgs("MessageTrigger")),ConstType(SortNoArgs("Term"))],ConstType(SortNoArgs("Instruction"))))])]),Rules([RDefT("task-create-message-on-triggers",[],[DefaultVarDec("partition"),DefaultVarDec("triggers")],RuleNoCond(Var("message"),App(CallT(SVar("new-task"),[],[Var("partition")]),NoAnnoList(Op("Message",[Var("triggers"),Var("message")]))))),SDefT("task-create-error-on-triggers",[],[DefaultVarDec("partition"),DefaultVarDec("triggers"),DefaultVarDec("message")],Seq(CallT(SVar("task-error-message"),[],[Var("message")]),CallT(SVar("task-create-message-on-triggers"),[],[Var("partition"),Var("triggers")]))),SDefT("task-create-warning-on-triggers",[],[DefaultVarDec("partition"),DefaultVarDec("triggers"),DefaultVarDec("message")],Seq(CallT(SVar("task-warning-message"),[],[Var("message")]),CallT(SVar("task-create-message-on-triggers"),[],[Var("partition"),Var("triggers")]))),SDefT("task-create-note-on-triggers",[],[DefaultVarDec("partition"),DefaultVarDec("triggers"),DefaultVarDec("message")],Seq(CallT(SVar("task-note-message"),[],[Var("message")]),CallT(SVar("task-create-message-on-triggers"),[],[Var("partition"),Var("triggers")])))]),Rules([SDefNoArgs("task-is-combinator",Match(NoAnnoList(Op("Message",[Wld,Wld])))),RDefT("perform-task",[],[DefaultVarDec("n")],Rule(NoAnnoList(Op("Message",[Var(ListVar("trigger*")),Var("message")])),NoAnnoList(List([])),[WhereClause(BA(Call(SVar("map"),[Choice(Match(NoAnnoList(Op("Failure",[NoAnnoList(List([]))]))),Choice(Match(NoAnnoList(Op("Success",[NoAnnoList(ListTail([Wld],Wld))]))),Match(NoAnnoList(Op("Multiple",[NoAnnoList(ListTail([Wld,Wld],Wld))])))))]),Var(ListVar("trigger*")))),WhereClause(CallT(SVar("task-add-message"),[],[Var("n"),Var("message")]))]))])])