Module("runtime/task/debug",[Imports([Import("runtime/task/core"),Import("runtime/task/create"),Import("runtime/task/insert")]),Signature([Constructors([OpDecl("Debug",FunType([ConstType(SortNoArgs("Term")),ConstType(SortNoArgs("Term"))],ConstType(SortNoArgs("Instruction"))))])]),Rules([SDefNoArgs("task-transitive-dependencies",CallT(SVar("task-transitive-dependencies"),[],[NoAnnoList(List([]))])),RDefT("task-transitive-dependencies",[],[DefaultVarDec("seen")],Rule(Var("taskID"),NoAnnoList(List([Var(ListVar("dep*")),Var(ListVar("trans-dep*"))])),Seq(Not(BA(CallNoArgs(SVar("elem")),NoAnnoList(Tuple([Var("taskID"),Var("seen")])))),Seq(Assign(Var(ListVar("dep*")),App(CallNoArgs(SVar("task-get-dependencies")),Var("taskID"))),Assign(Var(ListVar("trans-dep*")),App(Call(SVar("mapconcat"),[CallT(SVar("task-transitive-dependencies"),[],[NoAnnoList(ListTail([Var("taskID")],Var("seen")))])]),Var(ListVar("dep*")))))))),RDefT("task-transitive-dependencies",[],[DefaultVarDec("seen")],Rule(Var("taskID"),NoAnnoList(List([])),BA(CallNoArgs(SVar("elem")),NoAnnoList(Tuple([Var("taskID"),Var("seen")])))))]),Rules([RDefNoArgs("task-debug-ast",Rule(Var("ast"),Var(ListVar("debug*")),[WithClause(Seq(Assign(Var(ListVar("resultID*")),App(CallNoArgs(SVar("task-collect-result-ids")),Var("ast"))),Seq(Assign(Var(ListVar("dep*")),App(Call(SVar("mapconcat"),[CallNoArgs(SVar("task-transitive-dependencies"))]),Var(ListVar("resultID*")))),Assign(Var(ListVar("debug*")),App(Seq(CallNoArgs(SVar("make-set")),Call(SVar("map"),[CallT(SVar("task-debug-info"),[],[RootApp(Id)])])),NoAnnoList(List([Var(ListVar("resultID*")),Var(ListVar("dep*"))])))))))]))]),Rules([RDefT("task-debug",[],[DefaultVarDec("ctx")],RuleNoCond(Var("term"),App(CallT(SVar("new-task"),[],[Var("ctx")]),NoAnnoList(Op("Debug",[NoAnnoList(Str("\"\"")),Var("term")]))))),RDefT("task-debug",[],[DefaultVarDec("ctx"),DefaultVarDec("prefix")],RuleNoCond(Var("term"),App(CallT(SVar("new-task"),[],[Var("ctx")]),NoAnnoList(Op("Debug",[Var("prefix"),Var("term")]))))),SDefNoArgs("task-is-combinator",Match(NoAnnoList(Op("Debug",[Wld,Wld])))),RDefT("perform-task",[],[DefaultVarDec("task-id")],Rule(NoAnnoList(Op("Debug",[Var("prefix"),Var("term")])),Var("term"),SwitchChoice(Build(Var("term")),[SwitchCase(Match(NoAnnoList(List([]))),BA(Seq(CallT(SVar("task-debug-msg"),[],[Var("task-id"),Var("prefix")]),Fail),NoAnnoList(Str("\"__FAIL__\""))))],BA(CallT(SVar("task-debug-msg"),[],[Var("task-id"),Var("prefix")]),Var("term"))))),RDefT("task-debug-msg",[],[DefaultVarDec("task-id"),DefaultVarDec("prefix")],RuleNoCond(Var("msg"),App(Call(SVar("debug"),[Build(NoAnnoList(StringQuotation1("                     ",[StringEscape1("                     ",Var("task-id")),QStr(" - "),StringEscape1("                                 ",Var("prefix")),QStr(" ")])))]),Var("msg"))))])])