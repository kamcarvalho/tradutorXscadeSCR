Module("runtime/task/core",[Imports([Import("runtime/task/create"),Import("runtime/task/insert"),Import("runtime/task/utils"),Import("runtime/task/primitives"),Import("runtime/task/interface"),Import("runtime/nabl/entries"),Import("runtime/nabl/utils")]),Signature([Sorts([SortNoArgs("Result"),SortNoArgs("Instruction")]),Constructors([OpDecl("Result",FunType([ConstType(SortNoArgs("TaskID"))],ConstType(SortNoArgs("Result")))),OpDecl("HigherOrder",FunType([ConstType(SortNoArgs("Instruction")),ConstType(Sort("List",[SortNoArgs("TaskID")]))],ConstType(SortNoArgs("EvaluationReturn")))),OpDecl("HigherOrderFail",FunType([ConstType(Sort("List",[SortNoArgs("TaskID")]))],ConstType(SortNoArgs("EvaluationReturn"))))])]),Rules([SDefT("task-add-message",[],[DefaultVarDec("taskID"),DefaultVarDec("message")],CallT(SVar("task-api-add-message"),[],[Var("taskID"),Var("message")])),SDefT("task-add-task",[],[DefaultVarDec("partition"),DefaultVarDec("dependencies"),DefaultVarDec("instruction"),DefaultVarDec("type"),DefaultVarDec("storage-type"),DefaultVarDec("short-circuit")],CallT(SVar("task-api-add-task"),[],[Var("partition"),Var("dependencies"),Var("instruction"),Var("type"),Var("storage-type"),Var("short-circuit")])),SDefT("task-add-read",[],[DefaultVarDec("task-id")],CallT(SVar("task-api-add-read"),[],[Var("task-id"),RootApp(Id)])),SDefNoArgs("task-clear-partition",CallT(SVar("task-api-clear-partition"),[],[RootApp(Id)])),SDefNoArgs("task-delay",CallT(SVar("task-api-delay"),[],[RootApp(Id)])),SDefT("task-debug-info",[],[DefaultVarDec("partition")],CallT(SVar("task-api-debug-info"),[],[Var("partition")])),SDefNoArgs("task-evaluate-now",CallT(SVar("task-api-evaluate-now"),[CallNoArgs(SVar("task-collect-result-ids-2")),CallNoArgs(SVar("insert-results-hashmap")),CallNoArgs(SVar("task-perform-task"))],[RootApp(Id)])),SDefNoArgs("task-evaluate-scheduled",Call(SVar("task-api-evaluate-scheduled"),[CallNoArgs(SVar("task-collect-result-ids-2")),CallNoArgs(SVar("insert-results-hashmap")),CallNoArgs(SVar("task-perform-task"))])),SDefNoArgs("task-get-dependencies",CallT(SVar("task-api-get-dependencies"),[],[RootApp(Id)])),SDefT("task-get-messages",[],[DefaultVarDec("partition")],CallT(SVar("task-api-get-messages"),[],[Var("partition")])),SDefNoArgs("task-get-readers",CallT(SVar("task-api-get-readers"),[],[RootApp(Id)])),SDefT("task-invalidate-task-reads",[],[DefaultVarDec(ListVar("changedRead*"))],CallT(SVar("task-api-invalidate-task-reads"),[],[Var(ListVar("changedRead*"))])),SDefNoArgs("task-merge",CallNoArgs(SVar("task-api-merge"))),SDefT("task-sources-of",[],[DefaultVarDec(ListVar("task-id-or-task-id*"))],CallT(SVar("task-api-sources-of"),[],[Var(ListVar("task-id-or-task-id*"))])),SDefNoArgs("task-persist",CallNoArgs(SVar("task-api-persist"))),SDefNoArgs("task-pop",CallNoArgs(SVar("task-api-pop"))),SDefNoArgs("task-push",CallNoArgs(SVar("task-api-push"))),SDefNoArgs("task-recover",CallNoArgs(SVar("task-api-recover"))),SDefNoArgs("task-reset",CallNoArgs(SVar("task-api-reset"))),SDefNoArgs("task-result-combinations",CallT(SVar("task-api-result-combinations"),[CallNoArgs(SVar("task-collect-result-ids-2")),CallNoArgs(SVar("insert-results-hashmap"))],[RootApp(Id),NoAnnoList(Int("0"))])),SDefNoArgs("task-result-combinations-single",CallT(SVar("task-api-result-combinations"),[CallNoArgs(SVar("task-collect-result-ids-2")),CallNoArgs(SVar("insert-results-hashmap"))],[RootApp(Id),NoAnnoList(Int("1"))])),SDefT("task-setup",[],[DefaultVarDec("project-path")],CallT(SVar("task-api-setup"),[],[Var("project-path")])),SDefNoArgs("task-setup",CallT(SVar("task-api-setup"),[],[RootApp(Id)])),SDefT("task-start-collection",[],[DefaultVarDec("partition")],CallT(SVar("task-api-start-collection"),[],[Var("partition")])),SDefT("task-stop-collection",[],[DefaultVarDec("partition")],CallT(SVar("task-api-stop-collection"),[],[Var("partition")])),SDefNoArgs("task-unload",CallT(SVar("task-unload"),[],[RootApp(Id)])),SDefT("task-unload",[],[DefaultVarDec("project-path")],CallT(SVar("task-api-unload"),[],[Var("project-path")])),SDefNoArgs("task-get-result",CallNoArgs(SVar("task-get-results"))),SDefNoArgs("task-get-results",SwitchChoice(Id,[SwitchCase(Match(NoAnnoList(Op("Result",[Var("taskID")]))),CallT(SVar("task-api-get-results"),[],[Var("taskID")]))],CallT(SVar("task-api-get-results"),[],[RootApp(Id)]))),SDefNoArgs("task-has-failed",SwitchChoice(Id,[SwitchCase(Match(NoAnnoList(Op("Result",[Var("taskID")]))),CallT(SVar("task-api-has-failed"),[],[Var("taskID")]))],CallT(SVar("task-api-has-failed"),[],[RootApp(Id)]))),SDefNoArgs("task-get-solved",SwitchChoice(Id,[SwitchCase(Match(NoAnnoList(Op("Result",[Var("taskID")]))),LChoice(CallT(SVar("task-api-get-results"),[],[Var("taskID")]),Seq(CallT(SVar("task-api-has-failed"),[],[Var("taskID")]),Build(NoAnnoList(List([]))))))],LChoice(CallT(SVar("task-api-has-failed"),[],[RootApp(Id)]),Seq(CallT(SVar("task-api-has-failed"),[],[RootApp(Id)]),Build(NoAnnoList(List([])))))))]),Rules([RDefNoArgs("task-result-id",RuleNoCond(NoAnnoList(Op("Result",[Var("taskID")])),Var("taskID"))),SDefNoArgs("task-collect-result-ids",Call(SVar("collect-all-annos"),[CallNoArgs(SVar("task-result-id")),CallNoArgs(SVar("union"))])),RDefNoArgs("task-use-result-id",RuleNoCond(NoAnnoList(Op("Use",[NoAnnoList(Op("Result",[Var("taskID")]))])),Var("taskID"))),SDefNoArgs("task-collect-result-ids-2",Call(SVar("collect-all-annos-2"),[CallNoArgs(SVar("task-result-id")),CallNoArgs(SVar("task-use-result-id")),CallNoArgs(SVar("union"))]))]),Rules([RDefT("task-perform-task",[],[DefaultVarDec("task-id")],Rule(Var("instruction"),Var("result"),CondChoice(BA(CallNoArgs(SVar("task-is-higherorder")),Var("instruction")),Seq(CallT(SVar("task-start-collection"),[],[Var("task-id")]),CondChoice(Assign(Var("new-instruction"),App(CallT(SVar("perform-task"),[],[Var("task-id")]),Var("instruction"))),Seq(Assign(NoAnnoList(Tuple([Wld,Var(ListVar("added*"))])),RootApp(CallT(SVar("task-stop-collection"),[],[Var("task-id")]))),Assign(Var("result"),NoAnnoList(Op("HigherOrder",[Var("new-instruction"),Var(ListVar("added*"))])))),Seq(Assign(NoAnnoList(Tuple([Wld,Var(ListVar("added*"))])),RootApp(CallT(SVar("task-stop-collection"),[],[Var("task-id")]))),Assign(Var("result"),NoAnnoList(Op("HigherOrderFail",[Var(ListVar("added*"))])))))),Assign(Var("result"),App(CallT(SVar("perform-task"),[],[Var("task-id")]),Var("instruction"))))))])])