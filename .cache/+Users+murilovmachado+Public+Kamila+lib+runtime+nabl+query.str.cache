Module("runtime/nabl/query",[Imports([Import("runtime/nabl/uri"),Import("runtime/nabl/entries"),Import("runtime/index/query"),Import("runtime/task/core"),Import("runtime/task/insert")]),Rules([RDefNoArgs("nabl-get-all-definitions",Rule(Var(ListVar("contains-uri*")),App(Call(SVar("mapconcat"),[Call(SVar("nabl-get-unique-nonunique"),[Build(NoAnnoList(Op("Def",[RootApp(Id)])))])]),Var(ListVar("uri*"))),Assign(Var(ListVar("uri*")),App(CallNoArgs(SVar("nabl-uris")),Var(ListVar("contains-uri*")))))),RDefT("nabl-get-child-definitions",[],[DefaultVarDec("namespace")],Rule(Var(ListVar("contains-uri*")),Var(ListVar("def*")),Seq(Assign(Var(ListVar("uri*")),App(CallNoArgs(SVar("nabl-uris")),Var(ListVar("contains-uri*")))),Assign(Var(ListVar("def*")),App(Seq(Call(SVar("mapconcat"),[Seq(Build(NoAnnoList(Op("Def",[RootApp(Id)]))),CallT(SVar("nabl-get-all-childs"),[],[Var("namespace")]))]),Call(SVar("mapconcat"),[Seq(CallNoArgs(SVar("nabl-uri")),Call(SVar("nabl-get-unique-nonunique"),[Build(NoAnnoList(Op("Def",[RootApp(Id)])))]))])),Var(ListVar("uri*"))))))),RDefNoArgs("nabl-get-all-aliases",Rule(Var(ListVar("contains-uri*")),Var(ListVar("alias-uri*")),Seq(Assign(Var(ListVar("uri*")),App(CallNoArgs(SVar("nabl-uris")),Var(ListVar("contains-uri*")))),Seq(Assign(Var(ListVar("nonunique-uri*")),App(Call(SVar("filter"),[CallT(SVar("nabl-replace-uri-qualifier"),[],[NoAnnoList(Op("NonUnique",[]))])]),Var(ListVar("uri*")))),Assign(Var(ListVar("alias-uri*")),App(Call(SVar("mapconcat"),[Seq(Build(NoAnnoList(Op("Alias",[RootApp(Id)]))),CallNoArgs(SVar("index-get-all-values")))]),Var(ListVar("nonunique-uri*")))))))),RDefNoArgs("nabl-get-all-inverse-aliasses",Rule(Var(ListVar("contains-uri*")),Var(ListVar("inverse-alias*")),Seq(Assign(Var(ListVar("uri*")),App(CallNoArgs(SVar("nabl-uris")),Var(ListVar("contains-uri*")))),Assign(Var(ListVar("inverse-alias*")),App(Call(SVar("mapconcat"),[Seq(Build(NoAnnoList(Op("InverseAlias",[RootApp(Id)]))),CallNoArgs(SVar("index-get-all-values")))]),Var(ListVar("uri*")))))))]),Rules([RDefNoArgs("nabl-get-all-childs",Rule(Var("key"),Var("entries"),[WithClause(Assign(Var("entries"),App(CallNoArgs(SVar("index-get-all-childs")),Var("key"))))])),RDefT("nabl-get-all-childs",[],[DefaultVarDec("namespace")],Rule(Var("key"),Var("entries"),[WithClause(Seq(Assign(Var("children"),App(CallNoArgs(SVar("index-get-all-childs")),Var("key"))),Assign(Var("entries"),App(CallT(SVar("nabl-filter-entries"),[],[Var("namespace")]),Var("children")))))])),RDefT("nabl-get-all-childs",[],[DefaultVarDec("namespace"),DefaultVarDec("prefix")],Rule(Var("key"),Var("entries"),[WithClause(Seq(Assign(Var("children"),App(CallNoArgs(SVar("index-get-all-childs")),Var("key"))),Assign(Var("entries"),App(CallT(SVar("nabl-filter-entries"),[],[Var("namespace"),Var("prefix")]),Var("children")))))])),RDef("nabl-get-unique-nonunique",[DefaultVarDec("create-key")],Rule(Var("uri"),NoAnnoList(List([Var(ListVar("unique*")),Var(ListVar("non-unique*"))])),Seq(CondChoice(Assign(Var(ListVar("alias*")),App(CallNoArgs(SVar("nabl-get-all-aliases")),Var("uri"))),Seq(Assign(NoAnnoList(Tuple([Var(ListVar("alias-result*")),Var(ListVar("alias-uri*"))])),App(Call(SVar("partition"),[Seq(Match(NoAnnoList(Op("Result",[Wld]))),CallNoArgs(SVar("insert-results-or-delay")))]),Var(ListVar("alias*")))),Seq(Assign(Var(ListVar("unique-uri*")),App(Call(SVar("mapconcat"),[Seq(CallNoArgs(SVar("create-key")),CallNoArgs(SVar("index-get-all-values")))]),Var(ListVar("alias-uri*")))),Seq(Assign(Var(ListVar("unique-result*")),App(Call(SVar("try"),[CallNoArgs(SVar("concat"))]),Var(ListVar("alias-result*")))),Assign(Var(ListVar("unique*")),NoAnnoList(List([Var(ListVar("unique-uri*")),Var(ListVar("unique-result*"))])))))),Assign(Var(ListVar("unique*")),NoAnnoList(List([])))),CondChoice(Assign(Var("non-unique-uri"),App(CallT(SVar("nabl-replace-uri-qualifier"),[],[NoAnnoList(Op("NonUnique",[]))]),Var("uri"))),Assign(Var(ListVar("non-unique*")),App(Seq(CallNoArgs(SVar("create-key")),CallNoArgs(SVar("index-get-all-values"))),Var("non-unique-uri"))),Assign(Var(ListVar("non-unique*")),NoAnnoList(List([])))))))]),Rules([RDefT("nabl-filter-entries",[],[DefaultVarDec("namespace"),DefaultVarDec("prefix")],RuleNoCond(Var(ListVar("entry*")),App(Call(SVar("filter"),[CallT(SVar("nabl-compare-prefix"),[],[Var("namespace"),Var("prefix")])]),Var(ListVar("entry*"))))),RDefT("nabl-filter-entries",[],[DefaultVarDec("namespace")],RuleNoCond(Var(ListVar("entry*")),App(Call(SVar("filter"),[CallT(SVar("nabl-compare-namespace"),[],[Var("namespace")])]),Var(ListVar("entry*")))))]),Rules([RDefT("nabl-compare-prefix",[],[DefaultVarDec("namespace"),DefaultVarDec("prefix")],Rule(Var("entry"),RootApp(Id),Seq(Assign(Var("uri"),App(CallNoArgs(SVar("nabl-uri")),Var("entry"))),Seq(BA(CallNoArgs(SVar("eq")),NoAnnoList(Tuple([Var("namespace"),App(CallNoArgs(SVar("nabl-uri-namespace")),Var("uri"))]))),BA(Call(SVar("is-substring"),[Build(Var("prefix"))]),App(CallNoArgs(SVar("nabl-uri-name")),Var("uri"))))))),RDefT("nabl-compare-namespace",[],[DefaultVarDec("namespace")],Rule(Var("entry"),RootApp(Id),Seq(Assign(Var("uri"),App(CallNoArgs(SVar("nabl-uri")),Var("entry"))),BA(CallNoArgs(SVar("eq")),NoAnnoList(Tuple([Var("namespace"),App(CallNoArgs(SVar("nabl-uri-namespace")),Var("uri"))]))))))])])