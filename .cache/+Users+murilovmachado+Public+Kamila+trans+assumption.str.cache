Module("assumption",[Imports([Import("include/Entity")]),Rules([RDefNoArgs("resolve-assumptions-given-operators",RuleNoCond(NoAnnoList(List([])),NoAnnoList(List([])))),RDefNoArgs("resolve-assumptions-given-operators",RuleNoCond(NoAnnoList(ListTail([Var("head")],NoAnnoList(List([])))),App(CallNoArgs(SVar("resolve-assumption")),Var("head")))),RDefNoArgs("resolve-assumptions-given-operators",RuleNoCond(NoAnnoList(ListTail([Var("head")],Var("tail"))),App(CallNoArgs(SVar("resolve-assumptions-given-operators")),Var("tail")))),RDefNoArgs("resolve-assumption",Rule(NoAnnoList(Op("MainOperator",[Var("opkind"),Var("opname"),Var("inputs"),Var("outputs"),Var("locals"),Var("data"),Var("pragmas")])),NoAnnoList(StringQuotation1("  		                                                                          ",[StringEscape1("  		                                                                          ",Var("resolvedAssumptions"))])),[WithClause(Assign(Var("resolvedAssumptions"),App(CallNoArgs(SVar("resolve-assumptions-data")),Var("data"))))])),RDefNoArgs("resolve-assumptions-data",Rule(NoAnnoList(Op("Data",[Var("equations"),Var("assumptionOrAssertions")])),NoAnnoList(StringQuotation1("  		                                             ",[StringEscape1("  		                                             ",Var("resolvedAssumptionOrAssertions"))])),[WithClause(Assign(Var("resolvedAssumptionOrAssertions"),App(CallNoArgs(SVar("resolve-assumptions")),Var("assumptionOrAssertions"))))])),RDefNoArgs("resolve-assumption-or-assertion",RuleNoCond(NoAnnoList(Op("AssertionOperator",[Var("assertion")])),NoAnnoList(StringQuotation1("  		                                  ",[])))),RDefNoArgs("resolve-assumption-or-assertion",Rule(NoAnnoList(Op("AssumptionOperator",[Var("assumption")])),NoAnnoList(StringQuotation1("  		                                    ",[StringEscape1("  		                                    ",Var("resolvedAssumption"))])),[WithClause(Assign(Var("resolvedAssumption"),App(CallNoArgs(SVar("resolve-assumption")),Var("assumption"))))])),RDefNoArgs("resolve-assumptions",RuleNoCond(NoAnnoList(List([])),NoAnnoList(List([])))),RDefNoArgs("resolve-assumptions",Rule(NoAnnoList(ListTail([Var("head")],Var("tail"))),NoAnnoList(StringQuotation1("  		                   ",[QStr("\r\n  			"),StringEscape1("  			",Var("resolvedHead")),QStr("\r\n  			"),StringEscape1("  			",Var("resolvedTail"))])),[WithClause(Assign(Var("resolvedHead"),App(CallNoArgs(SVar("resolve-assumption-or-assertion")),Var("head")))),WithClause(Assign(Var("resolvedTail"),App(CallNoArgs(SVar("resolve-assumptions")),Var("tail"))))])),RDefNoArgs("resolve-assumption",Rule(NoAnnoList(Op("Assumption",[Var("assumptionName"),Var("mainOperand"),Var("pragmas")])),NoAnnoList(StringQuotation1("  		                                                      ",[StringEscape1("  		                                                      ",Var("assumptionName")),QStr(": "),StringEscape1("  		                                                                        ",Var("resolvedOperand")),QStr(";")])),[WithClause(Assign(Var("resolvedOperand"),App(CallNoArgs(SVar("resolve-operand-assumption")),Var("mainOperand"))))])),RDefNoArgs("resolve-operand-assumption",RuleNoCond(NoAnnoList(Op("NotOperand",[NoAnnoList(List([]))])),NoAnnoList(List([])))),RDefNoArgs("resolve-operand-assumption",Rule(NoAnnoList(Op("NotOperand",[Var("Operand")])),NoAnnoList(StringQuotation1("  		                          ",[QStr("NOT("),StringEscape1("  		                              ",Var("resolveNotOperand")),QStr(")")])),[WithClause(Assign(Var("resolveNotOperand"),App(CallNoArgs(SVar("resolve-operand-assumption")),Var("Operand"))))])),RDefNoArgs("resolve-operand-assumption",RuleNoCond(NoAnnoList(Op("And",[NoAnnoList(List([]))])),NoAnnoList(List([])))),RDefNoArgs("resolve-operand-assumption",Rule(NoAnnoList(Op("And",[NoAnnoList(ListTail([Var("head")],NoAnnoList(List([]))))])),NoAnnoList(StringQuotation1("  		                      ",[StringEscape1("  		                      ",Var("resolvedHead"))])),[WithClause(Assign(Var("resolvedHead"),App(CallNoArgs(SVar("resolve-operand-assumption")),Var("head"))))])),RDefNoArgs("resolve-operand-assumption",Rule(NoAnnoList(Op("And",[NoAnnoList(ListTail([Var("head")],Var("tail")))])),NoAnnoList(StringQuotation1("  		                        ",[StringEscape1("  		                        ",Var("resolvedHead")),QStr(" "),StringEscape1("  		                                       ",Var("andOrWhen")),QStr(" "),StringEscape1("  		                                                   ",Var("leftParenthesis")),StringEscape1("  		                                                                    ",Var("resolvedTail")),StringEscape1("  		                                                                                  ",Var("rightParenthesis"))])),[WithClause(Assign(Var("resolvedHead"),App(CallNoArgs(SVar("resolve-operand-assumption")),Var("head")))),WithClause(Assign(Var("resolvedTail"),App(CallNoArgs(SVar("resolve-operand-assumption")),NoAnnoList(Op("And",[Var("tail")]))))),WithClause(Assign(Var("isHeadEvent"),App(CallNoArgs(SVar("is-event")),NoAnnoList(Tuple([Var("resolvedHead")]))))),WhereClause(CondChoice(BA(CallNoArgs(SVar("eq")),NoAnnoList(Tuple([NoAnnoList(Str("\"true\"")),Var("isHeadEvent")]))),Assign(Var("andOrWhen"),NoAnnoList(StringQuotation1("  			                    ",[QStr("WHEN")]))),Assign(Var("andOrWhen"),NoAnnoList(StringQuotation1("  			                    ",[QStr("AND")]))))),WhereClause(CondChoice(BA(CallNoArgs(SVar("eq")),NoAnnoList(Tuple([NoAnnoList(Str("\"true\"")),Var("isHeadEvent")]))),Assign(Var("leftParenthesis"),NoAnnoList(StringQuotation1("  			                          ",[QStr("(")]))),Assign(Var("leftParenthesis"),NoAnnoList(StringQuotation1("  			                          ",[]))))),WhereClause(CondChoice(BA(CallNoArgs(SVar("eq")),NoAnnoList(Tuple([NoAnnoList(Str("\"true\"")),Var("isHeadEvent")]))),Assign(Var("rightParenthesis"),NoAnnoList(StringQuotation1("  			                           ",[QStr(")")]))),Assign(Var("rightParenthesis"),NoAnnoList(StringQuotation1("  			                           ",[])))))])),RDefNoArgs("is-event",Rule(Var("expressionName"),NoAnnoList(StringQuotation1("  		                    ",[StringEscape1("  		                    ",Var("result"))])),[WithClause(Assign(Var("expressionNameChars"),App(CallNoArgs(SVar("explode-string")),Var("expressionName")))),WithClause(Assign(Var("result"),App(CallNoArgs(SVar("starts-with-at-symbol")),Var("expressionNameChars"))))])),RDefNoArgs("starts-with-at-symbol",Rule(NoAnnoList(ListTail([Var("head")],Var("tail"))),NoAnnoList(StringQuotation1("  		                   ",[StringEscape1("  		                   ",Var("result"))])),[WithClause(Assign(Var("firstCharString"),App(CallNoArgs(SVar("implode-string")),NoAnnoList(List([Var("head")]))))),WhereClause(CondChoice(BA(CallNoArgs(SVar("eq")),NoAnnoList(Tuple([NoAnnoList(Str("\"@\"")),Var("firstCharString")]))),Assign(Var("result"),NoAnnoList(StringQuotation1("  			                 ",[QStr("true")]))),Assign(Var("result"),NoAnnoList(StringQuotation1("  			                 ",[QStr("false")])))))])),RDefNoArgs("resolve-operand-assumption",RuleNoCond(NoAnnoList(Op("Or",[NoAnnoList(List([]))])),NoAnnoList(List([])))),RDefNoArgs("resolve-operand-assumption",Rule(NoAnnoList(Op("Or",[NoAnnoList(ListTail([Var("head")],NoAnnoList(List([]))))])),NoAnnoList(StringQuotation1("  		                     ",[StringEscape1("  		                     ",Var("resolvedHead"))])),[WithClause(Assign(Var("resolvedHead"),App(CallNoArgs(SVar("resolve-operand-assumption")),Var("head"))))])),RDefNoArgs("resolve-operand-assumption",Rule(NoAnnoList(Op("Or",[NoAnnoList(ListTail([Var("head")],Var("tail")))])),NoAnnoList(StringQuotation1("  		                       ",[StringEscape1("  		                       ",Var("resolvedHead")),QStr(" OR "),StringEscape1("  		                                         ",Var("resolvedTail"))])),[WithClause(Assign(Var("resolvedHead"),App(CallNoArgs(SVar("resolve-operand-assumption")),Var("head")))),WithClause(Assign(Var("resolvedTail"),App(CallNoArgs(SVar("resolve-operand-assumption")),NoAnnoList(Op("Or",[Var("tail")])))))])),RDefNoArgs("resolve-operand-assumption",Rule(NoAnnoList(Op("Imply",[Var("leftOperand"),Var("rightOperand")])),NoAnnoList(StringQuotation1("  		                                      ",[QStr("("),StringEscape1("  		                                       ",Var("resolvedLeftOp")),QStr(") => ("),StringEscape1("  		                                                             ",Var("resolvedRightOp")),QStr(")")])),[WithClause(Assign(Var("resolvedLeftOp"),App(CallNoArgs(SVar("resolve-operand-assumption")),Var("leftOperand")))),WithClause(Assign(Var("resolvedRightOp"),App(CallNoArgs(SVar("resolve-operand-assumption")),Var("rightOperand"))))])),RDefNoArgs("resolve-operand-assumption",Rule(NoAnnoList(Op("Negative",[Var("operand")])),NoAnnoList(StringQuotation1("  		                       ",[QStr("-"),StringEscape1("  		                        ",Var("resolveOperand"))])),[WithClause(Assign(Var("resolveOperand"),App(CallNoArgs(SVar("resolve-operand-assumption")),Var("operand"))))])),RDefNoArgs("resolve-operand-assumption",Rule(NoAnnoList(Op("Xor",[Var("leftOperand"),Var("rightOperand")])),NoAnnoList(StringQuotation1("  		                                    ",[StringEscape1("  		                                    ",Var("resolvedLeftOp")),QStr(" <=> "),StringEscape1("  		                                                         ",Var("resolvedRightOp"))])),[WithClause(Assign(Var("resolvedLeftOp"),App(CallNoArgs(SVar("resolve-operand-assumption")),Var("leftOperand")))),WithClause(Assign(Var("resolvedRightOp"),App(CallNoArgs(SVar("resolve-operand-assumption")),Var("rightOperand"))))])),RDefNoArgs("resolve-operand-assumption",Rule(NoAnnoList(Op("GreaterThan",[Var("leftOperand"),Var("rightOperand")])),NoAnnoList(StringQuotation1("  		                                            ",[StringEscape1("  		                                            ",Var("resolvedLeftOp")),QStr(" > "),StringEscape1("  		                                                               ",Var("resolvedRightOp"))])),[WithClause(Assign(Var("resolvedLeftOp"),App(CallNoArgs(SVar("resolve-operand-assumption")),Var("leftOperand")))),WithClause(Assign(Var("resolvedRightOp"),App(CallNoArgs(SVar("resolve-operand-assumption")),Var("rightOperand"))))])),RDefNoArgs("resolve-operand-assumption",Rule(NoAnnoList(Op("GreaterThanOrEqual",[Var("leftOperand"),Var("rightOperand")])),NoAnnoList(StringQuotation1("  		                                                   ",[StringEscape1("  		                                                   ",Var("resolvedLeftOp")),QStr(" >= "),StringEscape1("  		                                                                       ",Var("resolvedRightOp"))])),[WithClause(Assign(Var("resolvedLeftOp"),App(CallNoArgs(SVar("resolve-operand-assumption")),Var("leftOperand")))),WithClause(Assign(Var("resolvedRightOp"),App(CallNoArgs(SVar("resolve-operand-assumption")),Var("rightOperand"))))])),RDefNoArgs("resolve-operand-assumption",Rule(NoAnnoList(Op("LessThan",[Var("leftOperand"),Var("rightOperand")])),NoAnnoList(StringQuotation1("  		                                         ",[StringEscape1("  		                                         ",Var("resolvedLeftOp")),QStr(" < "),StringEscape1("  		                                                            ",Var("resolvedRightOp"))])),[WithClause(Assign(Var("resolvedLeftOp"),App(CallNoArgs(SVar("resolve-operand-assumption")),Var("leftOperand")))),WithClause(Assign(Var("resolvedRightOp"),App(CallNoArgs(SVar("resolve-operand-assumption")),Var("rightOperand"))))])),RDefNoArgs("resolve-operand-assumption",Rule(NoAnnoList(Op("LessThanOrEqual",[Var("leftOperand"),Var("rightOperand")])),NoAnnoList(StringQuotation1("  		                                                ",[StringEscape1("  		                                                ",Var("resolvedLeftOp")),QStr(" <= "),StringEscape1("  		                                                                    ",Var("resolvedRightOp"))])),[WithClause(Assign(Var("resolvedLeftOp"),App(CallNoArgs(SVar("resolve-operand-assumption")),Var("leftOperand")))),WithClause(Assign(Var("resolvedRightOp"),App(CallNoArgs(SVar("resolve-operand-assumption")),Var("rightOperand"))))])),RDefNoArgs("resolve-operand-assumption",Rule(NoAnnoList(Tuple([NoAnnoList(Op("Equal",[Var("firstOperand"),Var("secondOperand")]))])),NoAnnoList(StringQuotation1("  		                                          ",[StringEscape1("  		                                          ",Var("resolvedFirstOperand")),QStr(" = "),StringEscape1("  		                                                                   ",Var("resolvedSecondOperand"))])),[WithClause(Assign(Var("resolvedFirstOperand"),App(CallNoArgs(SVar("resolve-operand-assumption")),NoAnnoList(Tuple([Var("firstOperand")]))))),WithClause(Assign(Var("resolvedSecondOperand"),App(CallNoArgs(SVar("resolve-operand-assumption")),NoAnnoList(Tuple([Var("secondOperand")])))))])),RDefNoArgs("resolve-operand-assumption",Rule(NoAnnoList(Tuple([NoAnnoList(Op("Different",[NoAnnoList(Op("LastVariable",[Var("lastName")])),NoAnnoList(Op("IdExpressionOp",[NoAnnoList(Op("IdExpression",[Var("expressionName")]))]))]))])),NoAnnoList(StringQuotation1("  		                                                                                       ",[StringEscape1("  		                                                                                       ",Var("resolvedDifferent"))])),CondChoice(BA(CallNoArgs(SVar("eq")),NoAnnoList(Tuple([Var("lastName"),Var("expressionName")]))),Assign(Var("resolvedDifferent"),NoAnnoList(StringQuotation1("  			                            ",[QStr("@C("),StringEscape1("  			                               ",Var("lastName")),QStr(")")]))),Assign(Var("resolvedDifferent"),App(CallNoArgs(SVar("resolve-operand-assumption-different")),NoAnnoList(Tuple([NoAnnoList(Op("Different",[NoAnnoList(Op("LastVariable",[Var("lastName")])),NoAnnoList(Op("IdExpressionOp",[NoAnnoList(Op("IdExpression",[Var("expressionName")]))]))]))]))))))),RDefNoArgs("resolve-operand-assumption",Rule(NoAnnoList(Tuple([NoAnnoList(Op("Different",[Var("firstOperand"),Var("secondOperand")]))])),NoAnnoList(StringQuotation1("  		                                              ",[StringEscape1("  		                                              ",Var("resolvedFirstOperand")),QStr(" =! "),StringEscape1("  		                                                                        ",Var("resolvedSecondOperand"))])),[WithClause(Assign(Var("resolvedFirstOperand"),App(CallNoArgs(SVar("resolve-operand-assumption")),NoAnnoList(Tuple([Var("firstOperand")]))))),WithClause(Assign(Var("resolvedSecondOperand"),App(CallNoArgs(SVar("resolve-operand-assumption")),NoAnnoList(Tuple([Var("secondOperand")])))))])),RDefNoArgs("resolve-operand-assumption-different",Rule(NoAnnoList(Tuple([NoAnnoList(Op("Different",[Var("firstOperand"),Var("secondOperand")]))])),NoAnnoList(StringQuotation1("  		                                              ",[QStr("("),StringEscape1("  		                                               ",Var("resolvedFirstOperand")),QStr(" =! "),StringEscape1("  		                                                                         ",Var("resolvedSecondOperand")),QStr(")")])),[WithClause(Assign(Var("resolvedFirstOperand"),App(CallNoArgs(SVar("resolve-operand-assumption")),NoAnnoList(Tuple([Var("firstOperand")]))))),WithClause(Assign(Var("resolvedSecondOperand"),App(CallNoArgs(SVar("resolve-operand-assumption")),NoAnnoList(Tuple([Var("secondOperand")])))))])),RDefNoArgs("resolve-operand-assumption",Rule(NoAnnoList(Op("Subtraction",[Var("leftOperand"),Var("rightOperand")])),NoAnnoList(StringQuotation1("  		                                            ",[QStr("("),StringEscape1("  		                                             ",Var("resolvedLeftOp")),QStr(" - "),StringEscape1("  		                                                                ",Var("resolvedRightOp")),QStr(")")])),[WithClause(Assign(Var("resolvedLeftOp"),App(CallNoArgs(SVar("resolve-operand-assumption")),Var("leftOperand")))),WithClause(Assign(Var("resolvedRightOp"),App(CallNoArgs(SVar("resolve-operand-assumption")),Var("rightOperand"))))])),RDefNoArgs("resolve-operand-assumption",Rule(NoAnnoList(Op("IdExpressionOp",[Var("idExpression")])),NoAnnoList(StringQuotation1("  		                                  ",[StringEscape1("  		                                  ",Var("idExpressionResolved"))])),[WithClause(Assign(Var("idExpressionResolved"),App(CallNoArgs(SVar("resolve-operand-assumption")),Var("idExpression"))))])),RDefNoArgs("resolve-operand-assumption",RuleNoCond(NoAnnoList(Op("IdExpression",[Var("expressionName")])),NoAnnoList(StringQuotation1("  		                                  ",[StringEscape1("  		                                  ",Var("expressionName")),QStr("'")])))),RDefNoArgs("resolve-operand-assumption",RuleNoCond(NoAnnoList(Op("LastVariable",[Var("lastName")])),NoAnnoList(StringQuotation1("  		                            ",[StringEscape1("  		                            ",Var("lastName"))])))),RDefNoArgs("resolve-operand-assumption",RuleNoCond(NoAnnoList(Op("ConstValue",[Var("value")])),NoAnnoList(StringQuotation1("  		                       ",[StringEscape1("  		                       ",Var("value"))]))))])])