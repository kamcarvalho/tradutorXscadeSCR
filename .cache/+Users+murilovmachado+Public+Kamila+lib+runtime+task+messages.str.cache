Module("runtime/task/messages",[Imports([Import("runtime/task/core"),Import("runtime/task/create"),Import("runtime/editor/origins")]),Signature([Sorts([SortNoArgs("Message"),SortNoArgs("MessageTrigger")]),Constructors([OpDecl("Error",FunType([ConstType(SortNoArgs("Origin")),ConstType(SortNoArgs("Term")),ConstType(SortNoArgs("Msg"))],ConstType(SortNoArgs("Message")))),OpDecl("Warning",FunType([ConstType(SortNoArgs("Origin")),ConstType(SortNoArgs("Term")),ConstType(SortNoArgs("Msg"))],ConstType(SortNoArgs("Message")))),OpDecl("Note",FunType([ConstType(SortNoArgs("Origin")),ConstType(SortNoArgs("Term")),ConstType(SortNoArgs("Msg"))],ConstType(SortNoArgs("Message")))),OpDecl("Always",ConstType(SortNoArgs("MessageTrigger"))),OpDecl("Failure",ConstType(SortNoArgs("MessageTrigger"))),OpDecl("Success",ConstType(SortNoArgs("MessageTrigger"))),OpDecl("Multiple",ConstType(SortNoArgs("MessageTrigger"))),OpDecl("Message",FunType([ConstType(SortNoArgs("Result")),ConstType(Sort("List",[SortNoArgs("Result")])),ConstType(SortNoArgs("MessageTrigger")),ConstType(SortNoArgs("Term"))],ConstType(SortNoArgs("Instruction"))))])]),Overlays([OverlayNoArgs("MISSING_ORIGIN",NoAnnoList(Str("\"MISSING ORIGIN INFORMATION\"")))]),Rules([RDefT("task-error-message",[],[DefaultVarDec("message")],RuleNoCond(Var("term"),NoAnnoList(Op("Error",[App(CallNoArgs(SVar("task-message-origin-location-offset")),Var("term")),Var("term"),Var("message")])))),RDefT("task-warning-message",[],[DefaultVarDec("message")],RuleNoCond(Var("term"),NoAnnoList(Op("Warning",[App(CallNoArgs(SVar("task-message-origin-location-offset")),Var("term")),Var("term"),Var("message")])))),RDefT("task-note-message",[],[DefaultVarDec("message")],RuleNoCond(Var("term"),NoAnnoList(Op("Note",[App(CallNoArgs(SVar("task-message-origin-location-offset")),Var("term")),Var("term"),Var("message")]))))]),Rules([RDefNoArgs("task-message",RuleNoCond(NoAnnoList(Op("Error",[Wld,Wld,Var("message")])),Var("message"))),RDefNoArgs("task-message",RuleNoCond(NoAnnoList(Op("Warning",[Wld,Wld,Var("message")])),Var("message"))),RDefNoArgs("task-message",RuleNoCond(NoAnnoList(Op("Note",[Wld,Wld,Var("message")])),Var("message"))),RDefNoArgs("task-message-term",RuleNoCond(NoAnnoList(Op("Error",[Wld,Var("term"),Wld])),Var("term"))),RDefNoArgs("task-message-term",RuleNoCond(NoAnnoList(Op("Warning",[Wld,Var("term"),Wld])),Var("term"))),RDefNoArgs("task-message-term",RuleNoCond(NoAnnoList(Op("Note",[Wld,Var("term"),Wld])),Var("term"))),RDefNoArgs("task-message-origin",RuleNoCond(NoAnnoList(Op("Error",[Var("origin"),Wld,Wld])),Var("origin"))),RDefNoArgs("task-message-origin",RuleNoCond(NoAnnoList(Op("Warning",[Var("origin"),Wld,Wld])),Var("origin"))),RDefNoArgs("task-message-origin",RuleNoCond(NoAnnoList(Op("Note",[Var("origin"),Wld,Wld])),Var("origin")))]),Rules([RDefT("task-create-message",[],[DefaultVarDec("partition"),DefaultVarDec(ListVar("exclude*"))],RuleNoCond(Var("message"),App(CallT(SVar("new-task"),[],[Var("partition")]),NoAnnoList(Op("Message",[NoAnnoList(Tuple([])),Var(ListVar("exclude*")),NoAnnoList(Op("Always",[])),Var("message")]))))),SDefT("task-create-error",[],[DefaultVarDec("partition"),DefaultVarDec(ListVar("exclude*")),DefaultVarDec("message")],Seq(CallT(SVar("task-error-message"),[],[Var("message")]),CallT(SVar("task-create-message"),[],[Var("partition"),Var(ListVar("exclude*"))]))),SDefT("task-create-error",[],[DefaultVarDec("partition"),DefaultVarDec("message")],CallT(SVar("task-create-error"),[],[Var("partition"),NoAnnoList(List([])),Var("message")])),SDefT("task-create-warning",[],[DefaultVarDec("partition"),DefaultVarDec(ListVar("exclude*")),DefaultVarDec("message")],Seq(CallT(SVar("task-warning-message"),[],[Var("message")]),CallT(SVar("task-create-message"),[],[Var("partition"),Var(ListVar("exclude*"))]))),SDefT("task-create-warning",[],[DefaultVarDec("partition"),DefaultVarDec("message")],CallT(SVar("task-create-warning"),[],[Var("partition"),NoAnnoList(List([])),Var("message")])),SDefT("task-create-note",[],[DefaultVarDec("partition"),DefaultVarDec(ListVar("exclude*")),DefaultVarDec("message")],Seq(CallT(SVar("task-note-message"),[],[Var("message")]),CallT(SVar("task-create-message"),[],[Var("partition"),Var(ListVar("exclude*"))]))),SDefT("task-create-note",[],[DefaultVarDec("partition"),DefaultVarDec("message")],CallT(SVar("task-create-note"),[],[Var("partition"),NoAnnoList(List([])),Var("message")])),RDefT("task-create-message-on-failure",[],[DefaultVarDec("partition"),DefaultVarDec("task"),DefaultVarDec(ListVar("exclude*"))],RuleNoCond(Var("message"),App(CallT(SVar("new-task"),[],[Var("partition")]),NoAnnoList(Op("Message",[Var("task"),Var(ListVar("exclude*")),NoAnnoList(Op("Failure",[])),Var("message")]))))),SDefT("task-create-error-on-failure",[],[DefaultVarDec("partition"),DefaultVarDec("task"),DefaultVarDec(ListVar("exclude*")),DefaultVarDec("message")],Seq(CallT(SVar("task-error-message"),[],[Var("message")]),CallT(SVar("task-create-message-on-failure"),[],[Var("partition"),Var("task"),Var(ListVar("exclude*"))]))),SDefT("task-create-error-on-failure",[],[DefaultVarDec("partition"),DefaultVarDec("task"),DefaultVarDec("message")],CallT(SVar("task-create-error-on-failure"),[],[Var("partition"),Var("task"),NoAnnoList(List([])),Var("message")])),SDefT("task-create-warning-on-failure",[],[DefaultVarDec("partition"),DefaultVarDec("task"),DefaultVarDec(ListVar("exclude*")),DefaultVarDec("message")],Seq(CallT(SVar("task-warning-message"),[],[Var("message")]),CallT(SVar("task-create-message-on-failure"),[],[Var("partition"),Var("task"),Var(ListVar("exclude*"))]))),SDefT("task-create-warning-on-failure",[],[DefaultVarDec("partition"),DefaultVarDec("task"),DefaultVarDec("message")],CallT(SVar("task-create-warning-on-failure"),[],[Var("partition"),Var("task"),NoAnnoList(List([])),Var("message")])),SDefT("task-create-note-on-failure",[],[DefaultVarDec("partition"),DefaultVarDec("task"),DefaultVarDec(ListVar("exclude*")),DefaultVarDec("message")],Seq(CallT(SVar("task-note-message"),[],[Var("message")]),CallT(SVar("task-create-message-on-failure"),[],[Var("partition"),Var("task"),Var(ListVar("exclude*"))]))),SDefT("task-create-note-on-failure",[],[DefaultVarDec("partition"),DefaultVarDec("task"),DefaultVarDec("message")],CallT(SVar("task-create-note-on-failure"),[],[Var("partition"),Var("task"),NoAnnoList(List([])),Var("message")])),RDefT("task-create-message-on-success",[],[DefaultVarDec("partition"),DefaultVarDec("task"),DefaultVarDec(ListVar("exclude*"))],RuleNoCond(Var("message"),App(CallT(SVar("new-task"),[],[Var("partition")]),NoAnnoList(Op("Message",[Var("task"),Var(ListVar("exclude*")),NoAnnoList(Op("Success",[])),Var("message")]))))),SDefT("task-create-error-on-success",[],[DefaultVarDec("partition"),DefaultVarDec("task"),DefaultVarDec(ListVar("exclude*")),DefaultVarDec("message")],Seq(CallT(SVar("task-error-message"),[],[Var("message")]),CallT(SVar("task-create-message-on-success"),[],[Var("partition"),Var("task"),Var(ListVar("exclude*"))]))),SDefT("task-create-error-on-success",[],[DefaultVarDec("partition"),DefaultVarDec("task"),DefaultVarDec("message")],CallT(SVar("task-create-error-on-success"),[],[Var("partition"),Var("task"),NoAnnoList(List([])),Var("message")])),SDefT("task-create-warning-on-success",[],[DefaultVarDec("partition"),DefaultVarDec("task"),DefaultVarDec(ListVar("exclude*")),DefaultVarDec("message")],Seq(CallT(SVar("task-warning-message"),[],[Var("message")]),CallT(SVar("task-create-message-on-success"),[],[Var("partition"),Var("task"),Var(ListVar("exclude*"))]))),SDefT("task-create-warning-on-success",[],[DefaultVarDec("partition"),DefaultVarDec("task"),DefaultVarDec("message")],CallT(SVar("task-create-warning-on-success"),[],[Var("partition"),Var("task"),NoAnnoList(List([])),Var("message")])),SDefT("task-create-note-on-success",[],[DefaultVarDec("partition"),DefaultVarDec("task"),DefaultVarDec(ListVar("exclude*")),DefaultVarDec("message")],Seq(CallT(SVar("task-note-message"),[],[Var("message")]),CallT(SVar("task-create-message-on-success"),[],[Var("partition"),Var("task"),Var(ListVar("exclude*"))]))),SDefT("task-create-note-on-success",[],[DefaultVarDec("partition"),DefaultVarDec("task"),DefaultVarDec("message")],CallT(SVar("task-create-note-on-success"),[],[Var("partition"),Var("task"),NoAnnoList(List([])),Var("message")])),RDefT("task-create-message-on-multiple",[],[DefaultVarDec("partition"),DefaultVarDec("task"),DefaultVarDec(ListVar("exclude*"))],RuleNoCond(Var("message"),App(CallT(SVar("new-task"),[],[Var("partition")]),NoAnnoList(Op("Message",[Var("task"),Var(ListVar("exclude*")),NoAnnoList(Op("Multiple",[])),Var("message")]))))),SDefT("task-create-error-on-multiple",[],[DefaultVarDec("partition"),DefaultVarDec("task"),DefaultVarDec(ListVar("exclude*")),DefaultVarDec("message")],Seq(CallT(SVar("task-error-message"),[],[Var("message")]),CallT(SVar("task-create-message-on-multiple"),[],[Var("partition"),Var("task"),Var(ListVar("exclude*"))]))),SDefT("task-create-error-on-multiple",[],[DefaultVarDec("partition"),DefaultVarDec("task"),DefaultVarDec("message")],CallT(SVar("task-create-error-on-multiple"),[],[Var("partition"),Var("task"),NoAnnoList(List([])),Var("message")])),SDefT("task-create-warning-on-multiple",[],[DefaultVarDec("partition"),DefaultVarDec("task"),DefaultVarDec(ListVar("exclude*")),DefaultVarDec("message")],Seq(CallT(SVar("task-warning-message"),[],[Var("message")]),CallT(SVar("task-create-message-on-multiple"),[],[Var("partition"),Var("task"),Var(ListVar("exclude*"))]))),SDefT("task-create-warning-on-multiple",[],[DefaultVarDec("partition"),DefaultVarDec("task"),DefaultVarDec("message")],CallT(SVar("task-create-warning-on-multiple"),[],[Var("partition"),Var("task"),NoAnnoList(List([])),Var("message")])),SDefT("task-create-note-on-multiple",[],[DefaultVarDec("partition"),DefaultVarDec("task"),DefaultVarDec(ListVar("exclude*")),DefaultVarDec("message")],Seq(CallT(SVar("task-note-message"),[],[Var("message")]),CallT(SVar("task-create-message-on-multiple"),[],[Var("partition"),Var("task"),Var(ListVar("exclude*"))]))),SDefT("task-create-note-on-multiple",[],[DefaultVarDec("partition"),DefaultVarDec("task"),DefaultVarDec("message")],CallT(SVar("task-create-note-on-multiple"),[],[Var("partition"),Var("task"),NoAnnoList(List([])),Var("message")]))]),Rules([SDefNoArgs("task-is-combinator",Match(NoAnnoList(Op("Message",[Wld,Wld,Wld,Wld])))),RDefT("perform-task",[],[DefaultVarDec("n")],Rule(NoAnnoList(Op("Message",[Var("task"),Var(ListVar("exclude*")),Var("trigger"),Var("message")])),NoAnnoList(Tuple([])),Seq(BA(Call(SVar("map"),[Seq(Not(Match(NoAnnoList(List([])))),CallNoArgs(SVar("task-result-combinations")))]),Var(ListVar("exclude*"))),SwitchChoiceNoOtherwise(Build(Var("trigger")),[SwitchCase(Match(NoAnnoList(Op("Always",[]))),CallT(SVar("task-add-message"),[],[Var("n"),Var("message")])),SwitchCase(Match(NoAnnoList(Op("Failure",[]))),Seq(Not(BA(CallNoArgs(SVar("Hd")),Var("task"))),CallT(SVar("task-add-message"),[],[Var("n"),Var("message")]))),SwitchCase(Match(NoAnnoList(Op("Success",[]))),Seq(BA(CallNoArgs(SVar("Hd")),Var("task")),CallT(SVar("task-add-message"),[],[Var("n"),Var("message")]))),SwitchCase(Match(NoAnnoList(Op("Multiple",[]))),Seq(BA(Seq(CallNoArgs(SVar("Tl")),CallNoArgs(SVar("Hd"))),Var("task")),CallT(SVar("task-add-message"),[],[Var("n"),Var("message")])))]))))]),Rules([RDefNoArgs("task-message-origin-location-offset",Rule(Var("term"),App(LChoice(CallNoArgs(SVar("origin-location-offset")),Call(SVar("MISSING_ORIGIN"),[])),Var("term")),Not(BA(CallNoArgs(SVar("is-list")),Var("term"))))),RDefNoArgs("task-message-origin-location-offset",Rule(Var("list"),Var("location-offset"),LChoice(Seq(BA(CallNoArgs(SVar("is-list")),Var("list")),Seq(Assign(NoAnnoList(Tuple([Var("partition"),Var("line"),Var("column"),Var("start-offset"),Wld])),App(Seq(CallNoArgs(SVar("Hd")),CallNoArgs(SVar("origin-location-offset"))),Var("list"))),Seq(Assign(NoAnnoList(Tuple([Wld,Wld,Wld,Wld,Var("end-offset")])),App(Seq(CallNoArgs(SVar("last")),CallNoArgs(SVar("origin-location-offset"))),Var("list"))),Assign(Var("location-offset"),NoAnnoList(Tuple([Var("partition"),Var("line"),Var("column"),Var("start-offset"),Var("end-offset")])))))),Assign(Var("location-offset"),NoAnnoList(Op("MISSING_ORIGIN",[]))))))])])