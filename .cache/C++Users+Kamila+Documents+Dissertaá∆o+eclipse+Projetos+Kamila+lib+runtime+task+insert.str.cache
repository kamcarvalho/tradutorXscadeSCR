Module("runtime/task/insert",[Imports([Import("runtime/task/core")]),Rules([SDef("replace-results",[DefaultVarDec("list"),DefaultVarDec("result"),DefaultVarDec("fail-result"),DefaultVarDec("no-result")],SwitchChoice(Id,[SwitchCase(CallNoArgs(SVar("has-annos")),Seq(Match(Var("t")),Seq(Build(NoAnnoList(Tuple([App(Call(SVar("replace-results-noannos"),[CallNoArgs(SVar("list")),CallNoArgs(SVar("result")),CallNoArgs(SVar("fail-result")),CallNoArgs(SVar("no-result"))]),Var("t")),App(Seq(CallNoArgs(SVar("get-annos")),Call(SVar("replace-results"),[CallNoArgs(SVar("list")),CallNoArgs(SVar("result")),CallNoArgs(SVar("fail-result")),CallNoArgs(SVar("no-result"))])),Var("t"))]))),CallNoArgs(SVar("set-annos")))))],Call(SVar("replace-results-noannos"),[CallNoArgs(SVar("list")),CallNoArgs(SVar("result")),CallNoArgs(SVar("fail-result")),CallNoArgs(SVar("no-result"))]))),SDef("replace-results-noannos",[DefaultVarDec("list"),DefaultVarDec("result"),DefaultVarDec("fail-result"),DefaultVarDec("no-result")],SwitchChoice(Id,[SwitchCase(CallNoArgs(SVar("is-list")),CallNoArgs(SVar("list"))),SwitchCase(Match(NoAnnoList(Op("Result",[Var("n")]))),LChoice(CallNoArgs(SVar("result")),LChoice(Seq(CallNoArgs(SVar("task-has-failed")),CallNoArgs(SVar("fail-result"))),CallNoArgs(SVar("no-result")))))],All(Call(SVar("replace-results"),[CallNoArgs(SVar("list")),CallNoArgs(SVar("result")),CallNoArgs(SVar("fail-result")),CallNoArgs(SVar("no-result"))])))),SDefT("insert-results-hashmap",[],[DefaultVarDec("results-hashmap")],Call(SVar("replace-results"),[Call(SVar("filter"),[CallT(SVar("insert-results-hashmap"),[],[Var("results-hashmap")])]),LRule(RuleNoCond(NoAnnoList(Op("Result",[Var("n")])),RootApp(Call(SVar("try"),[BA(CallT(SVar("hashtable-get"),[],[Var("n")]),Var("results-hashmap"))])))),Id,Id])),SDef("insert-results",[DefaultVarDec("fail-result"),DefaultVarDec("no-result")],Call(SVar("replace-results"),[Call(SVar("map"),[Call(SVar("insert-results"),[CallNoArgs(SVar("fail-result")),CallNoArgs(SVar("no-result"))])]),LRule(RuleNoCond(NoAnnoList(Op("Result",[Var("n")])),RootApp(CallNoArgs(SVar("task-get-results"))))),CallNoArgs(SVar("fail-result")),CallNoArgs(SVar("no-result"))])),RDefNoArgs("insert-results-or-delay",Rule(Var("term"),Var("inserted"),Seq(Assign(Var("deps"),RootApp(CallNoArgs(SVar("new-iset")))),Seq(Assign(Var("inserted"),App(Call(SVar("insert-results"),[Build(NoAnnoList(List([]))),LRule(RuleNoCond(NoAnnoList(Op("Result",[Var("n")])),App(CallT(SVar("iset-add"),[],[Var("n")]),Var("deps"))))]),Var("term"))),Seq(Assign(Var(ListVar("dep*")),App(CallNoArgs(SVar("iset-elements")),Var("deps"))),IfThen(BA(CallNoArgs(SVar("gt")),NoAnnoList(Tuple([App(CallNoArgs(SVar("length")),Var(ListVar("dep*"))),NoAnnoList(Int("0"))]))),BA(CallNoArgs(SVar("task-delay")),Var(ListVar("dep*")))))))))])])